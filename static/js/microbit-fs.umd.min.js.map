{"version":3,"file":"microbit-fs.umd.min.js","sources":["../../node_modules/core-js/modules/_fails.js","../../node_modules/core-js/modules/_descriptors.js","../../node_modules/core-js/modules/_global.js","../../node_modules/core-js/modules/_core.js","../../node_modules/core-js/modules/_is-object.js","../../node_modules/core-js/modules/_an-object.js","../../node_modules/core-js/modules/_dom-create.js","../../node_modules/core-js/modules/_ie8-dom-define.js","../../node_modules/core-js/modules/_to-primitive.js","../../node_modules/core-js/modules/_object-dp.js","../../node_modules/core-js/modules/_property-desc.js","../../node_modules/core-js/modules/_hide.js","../../node_modules/core-js/modules/_has.js","../../node_modules/core-js/modules/_uid.js","../../node_modules/core-js/modules/_shared.js","../../node_modules/core-js/modules/_function-to-string.js","../../node_modules/core-js/modules/_redefine.js","../../node_modules/core-js/modules/_a-function.js","../../node_modules/core-js/modules/_ctx.js","../../node_modules/core-js/modules/_export.js","../../node_modules/core-js/modules/_typed.js","../../node_modules/core-js/modules/_redefine-all.js","../../node_modules/core-js/modules/_an-instance.js","../../node_modules/core-js/modules/_to-integer.js","../../node_modules/core-js/modules/_to-length.js","../../node_modules/core-js/modules/_to-index.js","../../node_modules/core-js/modules/_cof.js","../../node_modules/core-js/modules/_iobject.js","../../node_modules/core-js/modules/_defined.js","../../node_modules/core-js/modules/_to-iobject.js","../../node_modules/core-js/modules/_to-absolute-index.js","../../node_modules/core-js/modules/_array-includes.js","../../node_modules/core-js/modules/_shared-key.js","../../node_modules/core-js/modules/_object-keys-internal.js","../../node_modules/core-js/modules/_enum-bug-keys.js","../../node_modules/core-js/modules/_object-gopn.js","../../node_modules/core-js/modules/_to-object.js","../../node_modules/core-js/modules/_array-fill.js","../../node_modules/core-js/modules/_wks.js","../../node_modules/core-js/modules/_set-to-string-tag.js","../../node_modules/core-js/modules/_typed-buffer.js","../../node_modules/core-js/modules/_classof.js","../../node_modules/core-js/modules/_iterators.js","../../node_modules/core-js/modules/_is-array-iter.js","../../node_modules/core-js/modules/_object-keys.js","../../node_modules/core-js/modules/_object-dps.js","../../node_modules/core-js/modules/_html.js","../../node_modules/core-js/modules/_object-create.js","../../node_modules/core-js/modules/_object-gpo.js","../../node_modules/core-js/modules/core.get-iterator-method.js","../../node_modules/core-js/modules/_is-array.js","../../node_modules/core-js/modules/_array-species-constructor.js","../../node_modules/core-js/modules/_array-species-create.js","../../node_modules/core-js/modules/_array-methods.js","../../node_modules/core-js/modules/_species-constructor.js","../../node_modules/core-js/modules/_add-to-unscopables.js","../../node_modules/core-js/modules/_iter-step.js","../../node_modules/core-js/modules/_iter-create.js","../../node_modules/core-js/modules/_iter-define.js","../../node_modules/core-js/modules/es6.array.iterator.js","../../node_modules/core-js/modules/_iter-detect.js","../../node_modules/core-js/modules/_set-species.js","../../node_modules/core-js/modules/_array-copy-within.js","../../node_modules/core-js/modules/_object-pie.js","../../node_modules/core-js/modules/_object-gopd.js","../../node_modules/core-js/modules/_typed-array.js","../../node_modules/core-js/modules/es6.typed.uint8-array.js","../../node_modules/core-js/modules/es6.array.fill.js","../../node_modules/core-js/modules/_string-at.js","../../node_modules/core-js/modules/_regexp-exec.js","../../node_modules/core-js/modules/_advance-string-index.js","../../node_modules/core-js/modules/_regexp-exec-abstract.js","../../node_modules/core-js/modules/_flags.js","../../node_modules/core-js/modules/es6.regexp.exec.js","../../node_modules/core-js/modules/_fix-re-wks.js","../../node_modules/core-js/modules/es6.regexp.replace.js","../../node_modules/core-js/modules/_iter-call.js","../../node_modules/core-js/modules/_for-of.js","../../node_modules/core-js/modules/_meta.js","../../node_modules/core-js/modules/_validate-collection.js","../../node_modules/core-js/modules/_collection-strong.js","../../node_modules/core-js/modules/_set-proto.js","../../node_modules/core-js/modules/_inherit-if-required.js","../../node_modules/core-js/modules/_collection.js","../../node_modules/core-js/modules/es6.set.js","../../node_modules/core-js/modules/es6.regexp.match.js","../../node_modules/core-js/modules/_create-property.js","../../node_modules/core-js/modules/es6.array.from.js","../../node_modules/core-js/modules/_strict-method.js","../../node_modules/core-js/modules/es6.array.sort.js","../../node_modules/core-js/modules/_object-sap.js","../../node_modules/core-js/modules/es6.object.keys.js","../../node_modules/core-js/modules/_wks-ext.js","../../node_modules/core-js/modules/_wks-define.js","../../node_modules/core-js/modules/es7.symbol.async-iterator.js","../../node_modules/core-js/modules/_object-gops.js","../../node_modules/core-js/modules/_object-gopn-ext.js","../../node_modules/core-js/modules/es6.symbol.js","../../node_modules/core-js/modules/_enum-keys.js","../../node_modules/core-js/modules/web.dom.iterable.js","../../node_modules/core-js/modules/es6.string.iterator.js","../../node_modules/core-js/modules/es6.map.js","../../node_modules/core-js/modules/_string-ws.js","../../node_modules/core-js/modules/_string-trim.js","../../node_modules/core-js/modules/es6.number.constructor.js","../../node_modules/core-js/modules/_is-integer.js","../../node_modules/core-js/modules/es6.number.is-integer.js","../../node_modules/core-js/modules/es6.regexp.flags.js","../../node_modules/core-js/modules/es6.regexp.to-string.js","../../node_modules/core-js/modules/es6.object.to-string.js","../../node_modules/core-js/modules/_string-repeat.js","../../node_modules/core-js/modules/_string-pad.js","../../node_modules/core-js/modules/_user-agent.js","../../node_modules/core-js/modules/es7.string.pad-start.js","../../node_modules/nrf-intel-hex/intel-hex.js","../../node_modules/text-encoder-lite/text-encoder-lite.js","../../src/common.ts","../../src/micropython-appended.ts","../../node_modules/core-js/modules/_object-to-array.js","../../node_modules/core-js/modules/es7.object.entries.js","../../node_modules/core-js/modules/es7.object.values.js","../../node_modules/core-js/modules/_is-regexp.js","../../node_modules/core-js/modules/_string-context.js","../../node_modules/core-js/modules/_fails-is-regexp.js","../../node_modules/core-js/modules/es6.string.includes.js","../../node_modules/core-js/modules/es6.string.ends-with.js","../../node_modules/core-js/modules/es7.array.includes.js","../../node_modules/core-js/modules/es6.regexp.split.js","../../node_modules/@microbit/microbit-universal-hex/src/utils.ts","../../node_modules/core-js/modules/es6.number.is-nan.js","../../node_modules/@microbit/microbit-universal-hex/src/ihex.ts","../../node_modules/@microbit/microbit-universal-hex/src/universal-hex.ts","../../node_modules/core-js/modules/es6.typed.uint32-array.js","../../src/flash-regions.ts","../../src/uicr.ts","../../src/hex-mem-info.ts","../../src/micropython-fs-builder.ts","../../src/simple-file.ts","../../src/micropython-fs-hex.ts"],"sourcesContent":["module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = {};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","exports.f = {}.propertyIsEnumerable;\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\n\nvar regexpFlags = require('./_flags');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar at = require('./_string-at')(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n","'use strict';\n\nvar classof = require('./_classof');\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar regexpExec = require('./_regexp-exec');\nrequire('./_export')({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n","'use strict';\nrequire('./es6.regexp.exec');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\nvar regexpExec = require('./_regexp-exec');\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar toInteger = require('./_to-integer');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n","'use strict';\nvar dP = require('./_object-dp').f;\nvar create = require('./_object-create');\nvar redefineAll = require('./_redefine-all');\nvar ctx = require('./_ctx');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar $iterDefine = require('./_iter-define');\nvar step = require('./_iter-step');\nvar setSpecies = require('./_set-species');\nvar DESCRIPTORS = require('./_descriptors');\nvar fastKey = require('./_meta').fastKey;\nvar validate = require('./_validate-collection');\nvar SIZE = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, 'size', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return step(0, entry.k);\n      if (kind == 'values') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function (KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY,\n      KEY == 'delete' ? function (a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'has' ? function has(a) {\n        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'get' ? function get(a) {\n        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }\n    );\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","exports.f = require('./_wks');\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","require('./_wks-define')('asyncIterator');\n","exports.f = Object.getOwnPropertySymbols;\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar toObject = require('./_to-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $GOPS = require('./_object-gops');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","\n/**\n * Parser/writer for the \"Intel hex\" format.\n */\n\n/*\n * A regexp that matches lines in a .hex file.\n *\n * One hexadecimal character is matched by \"[0-9A-Fa-f]\".\n * Two hex characters are matched by \"[0-9A-Fa-f]{2}\"\n * Eight or more hex characters are matched by \"[0-9A-Fa-f]{8,}\"\n * A capture group of two hex characters is \"([0-9A-Fa-f]{2})\"\n *\n * Record mark         :\n * 8 or more hex chars  ([0-9A-Fa-f]{8,})\n * Checksum                              ([0-9A-Fa-f]{2})\n * Optional newline                                      (?:\\r\\n|\\r|\\n|)\n */\nconst hexLineRegexp = /:([0-9A-Fa-f]{8,})([0-9A-Fa-f]{2})(?:\\r\\n|\\r|\\n|)/g;\n\n\n// Takes a Uint8Array as input,\n// Returns an integer in the 0-255 range.\nfunction checksum(bytes) {\n    return (-bytes.reduce((sum, v)=>sum + v, 0)) & 0xFF;\n}\n\n// Takes two Uint8Arrays as input,\n// Returns an integer in the 0-255 range.\nfunction checksumTwo(array1, array2) {\n    const partial1 = array1.reduce((sum, v)=>sum + v, 0);\n    const partial2 = array2.reduce((sum, v)=>sum + v, 0);\n    return -( partial1 + partial2 ) & 0xFF;\n}\n\n\n// Trivial utility. Converts a number to hex and pads with zeroes up to 2 characters.\nfunction hexpad(number) {\n    return number.toString(16).toUpperCase().padStart(2, '0');\n}\n\n\n// Polyfill as per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\nNumber.isInteger = Number.isInteger || function(value) {\n    return typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value;\n};\n\n\n/**\n * @class MemoryMap\n *\n * Represents the contents of a memory layout, with main focus into (possibly sparse) blocks of data.\n *<br/>\n * A {@linkcode MemoryMap} acts as a subclass of\n * {@linkcode https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map|Map}.\n * In every entry of it, the key is the starting address of a data block (an integer number),\n * and the value is the <tt>Uint8Array</tt> with the data for that block.\n *<br/>\n * The main rationale for this is that a .hex file can contain a single block of contiguous\n * data starting at memory address 0 (and it's the common case for simple .hex files),\n * but complex files with several non-contiguous data blocks are also possible, thus\n * the need for a data structure on top of the <tt>Uint8Array</tt>s.\n *<br/>\n * In order to parse <tt>.hex</tt> files, use the {@linkcode MemoryMap.fromHex} <em>static</em> factory\n * method. In order to write <tt>.hex</tt> files, create a new {@linkcode MemoryMap} and call\n * its {@linkcode MemoryMap.asHexString} method.\n *\n * @extends Map\n * @example\n * import MemoryMap from 'nrf-intel-hex';\n *\n * let memMap1 = new MemoryMap();\n * let memMap2 = new MemoryMap([[0, new Uint8Array(1,2,3,4)]]);\n * let memMap3 = new MemoryMap({0: new Uint8Array(1,2,3,4)});\n * let memMap4 = new MemoryMap({0xCF0: new Uint8Array(1,2,3,4)});\n */\nclass MemoryMap {\n    /**\n     * @param {Iterable} blocks The initial value for the memory blocks inside this\n     * <tt>MemoryMap</tt>. All keys must be numeric, and all values must be instances of\n     * <tt>Uint8Array</tt>. Optionally it can also be a plain <tt>Object</tt> with\n     * only numeric keys.\n     */\n    constructor(blocks) {\n        this._blocks = new Map();\n\n        if (blocks && typeof blocks[Symbol.iterator] === 'function') {\n            for (const tuple of blocks) {\n                if (!(tuple instanceof Array) || tuple.length !== 2) {\n                    throw new Error('First parameter to MemoryMap constructor must be an iterable of [addr, bytes] or undefined');\n                }\n                this.set(tuple[0], tuple[1]);\n            }\n        } else if (typeof blocks === 'object') {\n            // Try iterating through the object's keys\n            const addrs = Object.keys(blocks);\n            for (const addr of addrs) {\n                this.set(parseInt(addr), blocks[addr]);\n            }\n\n        } else if (blocks !== undefined && blocks !== null) {\n            throw new Error('First parameter to MemoryMap constructor must be an iterable of [addr, bytes] or undefined');\n        }\n    }\n\n    set(addr, value) {\n        if (!Number.isInteger(addr)) {\n            throw new Error('Address passed to MemoryMap is not an integer');\n        }\n        if (addr < 0) {\n            throw new Error('Address passed to MemoryMap is negative');\n        }\n        if (!(value instanceof Uint8Array)) {\n            throw new Error('Bytes passed to MemoryMap are not an Uint8Array');\n        }\n        return this._blocks.set(addr, value);\n    }\n    // Delegate the following to the 'this._blocks' Map:\n    get(addr)    { return this._blocks.get(addr);    }\n    clear()      { return this._blocks.clear();      }\n    delete(addr) { return this._blocks.delete(addr); }\n    entries()    { return this._blocks.entries();    }\n    forEach(callback, that) { return this._blocks.forEach(callback, that); }\n    has(addr)    { return this._blocks.has(addr);    }\n    keys()       { return this._blocks.keys();       }\n    values()     { return this._blocks.values();     }\n    get size()   { return this._blocks.size;         }\n    [Symbol.iterator]() { return this._blocks[Symbol.iterator](); }\n\n\n    /**\n     * Parses a string containing data formatted in \"Intel HEX\" format, and\n     * returns an instance of {@linkcode MemoryMap}.\n     *<br/>\n     * The insertion order of keys in the {@linkcode MemoryMap} is guaranteed to be strictly\n     * ascending. In other words, when iterating through the {@linkcode MemoryMap}, the addresses\n     * will be ordered in ascending order.\n     *<br/>\n     * The parser has an opinionated behaviour, and will throw a descriptive error if it\n     * encounters some malformed input. Check the project's\n     * {@link https://github.com/NordicSemiconductor/nrf-intel-hex#Features|README file} for details.\n     *<br/>\n     * If <tt>maxBlockSize</tt> is given, any contiguous data block larger than that will\n     * be split in several blocks.\n     *\n     * @param {String} hexText The contents of a .hex file.\n     * @param {Number} [maxBlockSize=Infinity] Maximum size of the returned <tt>Uint8Array</tt>s.\n     *\n     * @return {MemoryMap}\n     *\n     * @example\n     * import MemoryMap from 'nrf-intel-hex';\n     *\n     * let intelHexString =\n     *     \":100000000102030405060708090A0B0C0D0E0F1068\\n\" +\n     *     \":00000001FF\";\n     *\n     * let memMap = MemoryMap.fromHex(intelHexString);\n     *\n     * for (let [address, dataBlock] of memMap) {\n     *     console.log('Data block at ', address, ', bytes: ', dataBlock);\n     * }\n     */\n    static fromHex(hexText, maxBlockSize = Infinity) {\n        const blocks = new MemoryMap();\n\n        let lastCharacterParsed = 0;\n        let matchResult;\n        let recordCount = 0;\n\n        // Upper Linear Base Address, the 16 most significant bits (2 bytes) of\n        // the current 32-bit (4-byte) address\n        // In practice this is a offset that is summed to the \"load offset\" of the\n        // data records\n        let ulba = 0;\n\n        hexLineRegexp.lastIndex = 0; // Reset the regexp, if not it would skip content when called twice\n\n        while ((matchResult = hexLineRegexp.exec(hexText)) !== null) {\n            recordCount++;\n\n            // By default, a regexp loop ignores gaps between matches, but\n            // we want to be aware of them.\n            if (lastCharacterParsed !== matchResult.index) {\n                throw new Error(\n                    'Malformed hex file: Could not parse between characters ' +\n                    lastCharacterParsed +\n                    ' and ' +\n                    matchResult.index +\n                    ' (\"' +\n                    hexText.substring(lastCharacterParsed, Math.min(matchResult.index, lastCharacterParsed + 16)).trim() +\n                    '\")');\n            }\n            lastCharacterParsed = hexLineRegexp.lastIndex;\n\n            // Give pretty names to the match's capture groups\n            const [, recordStr, recordChecksum] = matchResult;\n\n            // String to Uint8Array - https://stackoverflow.com/questions/43131242/how-to-convert-a-hexademical-string-of-data-to-an-arraybuffer-in-javascript\n            const recordBytes = new Uint8Array(recordStr.match(/[\\da-f]{2}/gi).map((h)=>parseInt(h, 16)));\n\n            const recordLength = recordBytes[0];\n            if (recordLength + 4 !== recordBytes.length) {\n                throw new Error('Mismatched record length at record ' + recordCount + ' (' + matchResult[0].trim() + '), expected ' + (recordLength) + ' data bytes but actual length is ' + (recordBytes.length - 4));\n            }\n\n            const cs = checksum(recordBytes);\n            if (parseInt(recordChecksum, 16) !== cs) {\n                throw new Error('Checksum failed at record ' + recordCount + ' (' + matchResult[0].trim() + '), should be ' + cs.toString(16) );\n            }\n\n            const offset = (recordBytes[1] << 8) + recordBytes[2];\n            const recordType = recordBytes[3];\n            const data = recordBytes.subarray(4);\n\n            if (recordType === 0) {\n                // Data record, contains data\n                // Create a new block, at (upper linear base address + offset)\n                if (blocks.has(ulba + offset)) {\n                    throw new Error('Duplicated data at record ' + recordCount + ' (' + matchResult[0].trim() + ')');\n                }\n                if (offset + data.length > 0x10000) {\n                    throw new Error(\n                        'Data at record ' +\n                        recordCount +\n                        ' (' +\n                        matchResult[0].trim() +\n                        ') wraps over 0xFFFF. This would trigger ambiguous behaviour. Please restructure your data so that for every record the data offset plus the data length do not exceed 0xFFFF.');\n                }\n\n                blocks.set( ulba + offset, data );\n\n            } else {\n\n                // All non-data records must have a data offset of zero\n                if (offset !== 0) {\n                    throw new Error('Record ' + recordCount + ' (' + matchResult[0].trim() + ') must have 0000 as data offset.');\n                }\n\n                switch (recordType) {\n                case 1: // EOF\n                    if (lastCharacterParsed !== hexText.length) {\n                        // This record should be at the very end of the string\n                        throw new Error('There is data after an EOF record at record ' + recordCount);\n                    }\n\n                    return blocks.join(maxBlockSize);\n\n                case 2: // Extended Segment Address Record\n                    // Sets the 16 most significant bits of the 20-bit Segment Base\n                    // Address for the subsequent data.\n                    ulba = ((data[0] << 8) + data[1]) << 4;\n                    break;\n\n                case 3: // Start Segment Address Record\n                    // Do nothing. Record type 3 only applies to 16-bit Intel CPUs,\n                    // where it should reset the program counter (CS+IP CPU registers)\n                    break;\n\n                case 4: // Extended Linear Address Record\n                    // Sets the 16 most significant (upper) bits of the 32-bit Linear Address\n                    // for the subsequent data\n                    ulba = ((data[0] << 8) + data[1]) << 16;\n                    break;\n\n                case 5: // Start Linear Address Record\n                    // Do nothing. Record type 5 only applies to 32-bit Intel CPUs,\n                    // where it should reset the program counter (EIP CPU register)\n                    // It might have meaning for other CPU architectures\n                    // (see http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/ka9903.html )\n                    // but will be ignored nonetheless.\n                    break;\n                default:\n                    throw new Error('Invalid record type 0x' + hexpad(recordType) + ' at record ' + recordCount + ' (should be between 0x00 and 0x05)');\n                }\n            }\n        }\n\n        if (recordCount) {\n            throw new Error('No EOF record at end of file');\n        } else {\n            throw new Error('Malformed .hex file, could not parse any registers');\n        }\n    }\n\n\n    /**\n     * Returns a <strong>new</strong> instance of {@linkcode MemoryMap}, containing\n     * the same data, but concatenating together those memory blocks that are adjacent.\n     *<br/>\n     * The insertion order of keys in the {@linkcode MemoryMap} is guaranteed to be strictly\n     * ascending. In other words, when iterating through the {@linkcode MemoryMap}, the addresses\n     * will be ordered in ascending order.\n     *<br/>\n     * If <tt>maxBlockSize</tt> is given, blocks will be concatenated together only\n     * until the joined block reaches this size in bytes. This means that the output\n     * {@linkcode MemoryMap} might have more entries than the input one.\n     *<br/>\n     * If there is any overlap between blocks, an error will be thrown.\n     *<br/>\n     * The returned {@linkcode MemoryMap} will use newly allocated memory.\n     *\n     * @param {Number} [maxBlockSize=Infinity] Maximum size of the <tt>Uint8Array</tt>s in the\n     * returned {@linkcode MemoryMap}.\n     *\n     * @return {MemoryMap}\n     */\n    join(maxBlockSize = Infinity) {\n\n        // First pass, create a Map of address→length of contiguous blocks\n        const sortedKeys = Array.from(this.keys()).sort((a,b)=>a-b);\n        const blockSizes = new Map();\n        let lastBlockAddr = -1;\n        let lastBlockEndAddr = -1;\n\n        for (let i=0,l=sortedKeys.length; i<l; i++) {\n            const blockAddr = sortedKeys[i];\n            const blockLength = this.get(sortedKeys[i]).length;\n\n            if (lastBlockEndAddr === blockAddr && (lastBlockEndAddr - lastBlockAddr) < maxBlockSize) {\n                // Grow when the previous end address equals the current,\n                // and we don't go over the maximum block size.\n                blockSizes.set(lastBlockAddr, blockSizes.get(lastBlockAddr) + blockLength);\n                lastBlockEndAddr += blockLength;\n            } else if (lastBlockEndAddr <= blockAddr) {\n                // Else mark a new block.\n                blockSizes.set(blockAddr, blockLength);\n                lastBlockAddr = blockAddr;\n                lastBlockEndAddr = blockAddr + blockLength;\n            } else {\n                throw new Error('Overlapping data around address 0x' + blockAddr.toString(16));\n            }\n        }\n\n        // Second pass: allocate memory for the contiguous blocks and copy data around.\n        const mergedBlocks = new MemoryMap();\n        let mergingBlock;\n        let mergingBlockAddr = -1;\n        for (let i=0,l=sortedKeys.length; i<l; i++) {\n            const blockAddr = sortedKeys[i];\n            if (blockSizes.has(blockAddr)) {\n                mergingBlock = new Uint8Array(blockSizes.get(blockAddr));\n                mergedBlocks.set(blockAddr, mergingBlock);\n                mergingBlockAddr = blockAddr;\n            }\n            mergingBlock.set(this.get(blockAddr), blockAddr - mergingBlockAddr);\n        }\n\n        return mergedBlocks;\n    }\n\n    /**\n     * Given a {@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map|<tt>Map</tt>}\n     * of {@linkcode MemoryMap}s, indexed by a alphanumeric ID,\n     * returns a <tt>Map</tt> of address to tuples (<tt>Arrays</tt>s of length 2) of the form\n     * <tt>(id, Uint8Array)</tt>s.\n     *<br/>\n     * The scenario for using this is having several {@linkcode MemoryMap}s, from several calls to\n     * {@link module:nrf-intel-hex~hexToArrays|hexToArrays}, each having a different identifier.\n     * This function locates where those memory block sets overlap, and returns a <tt>Map</tt>\n     * containing addresses as keys, and arrays as values. Each array will contain 1 or more\n     * <tt>(id, Uint8Array)</tt> tuples: the identifier of the memory block set that has\n     * data in that region, and the data itself. When memory block sets overlap, there will\n     * be more than one tuple.\n     *<br/>\n     * The <tt>Uint8Array</tt>s in the output are\n     * {@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray|subarrays}\n     * of the input data; new memory is <strong>not</strong> allocated for them.\n     *<br/>\n     * The insertion order of keys in the output <tt>Map</tt> is guaranteed to be strictly\n     * ascending. In other words, when iterating through the <tt>Map</tt>, the addresses\n     * will be ordered in ascending order.\n     *<br/>\n     * When two blocks overlap, the corresponding array of tuples will have the tuples ordered\n     * in the insertion order of the input <tt>Map</tt> of block sets.\n     *<br/>\n     *\n     * @param {Map.MemoryMap} memoryMaps The input memory block sets\n     *\n     * @example\n     * import MemoryMap from 'nrf-intel-hex';\n     *\n     * let memMap1 = MemoryMap.fromHex( hexdata1 );\n     * let memMap2 = MemoryMap.fromHex( hexdata2 );\n     * let memMap3 = MemoryMap.fromHex( hexdata3 );\n     *\n     * let maps = new Map([\n     *  ['file A', blocks1],\n     *  ['file B', blocks2],\n     *  ['file C', blocks3]\n     * ]);\n     *\n     * let overlappings = MemoryMap.overlapMemoryMaps(maps);\n     *\n     * for (let [address, tuples] of overlappings) {\n     *     // if 'tuples' has length > 1, there is an overlap starting at 'address'\n     *\n     *     for (let [address, tuples] of overlappings) {\n     *         let [id, bytes] = tuple;\n     *         // 'id' in this example is either 'file A', 'file B' or 'file C'\n     *     }\n     * }\n     * @return {Map.Array<mixed,Uint8Array>} The map of possibly overlapping memory blocks\n     */\n    static overlapMemoryMaps(memoryMaps) {\n        // First pass: create a list of addresses where any block starts or ends.\n        const cuts = new Set();\n        for (const [, blocks] of memoryMaps) {\n            for (const [address, block] of blocks) {\n                cuts.add(address);\n                cuts.add(address + block.length);\n            }\n        }\n\n        const orderedCuts = Array.from(cuts.values()).sort((a,b)=>a-b);\n        const overlaps = new Map();\n\n        // Second pass: iterate through the cuts, get slices of every intersecting blockset\n        for (let i=0, l=orderedCuts.length-1; i<l; i++) {\n            const cut = orderedCuts[i];\n            const nextCut = orderedCuts[i+1];\n            const tuples = [];\n\n            for (const [setId, blocks] of memoryMaps) {\n                // Find the block with the highest address that is equal or lower to\n                // the current cut (if any)\n                const blockAddr = Array.from(blocks.keys()).reduce((acc, val)=>{\n                    if (val > cut) {\n                        return acc;\n                    }\n                    return Math.max( acc, val );\n                }, -1);\n\n                if (blockAddr !== -1) {\n                    const block = blocks.get(blockAddr);\n                    const subBlockStart = cut - blockAddr;\n                    const subBlockEnd = nextCut - blockAddr;\n\n                    if (subBlockStart < block.length) {\n                        tuples.push([ setId, block.subarray(subBlockStart, subBlockEnd) ]);\n                    }\n                }\n            }\n\n            if (tuples.length) {\n                overlaps.set(cut, tuples);\n            }\n        }\n\n        return overlaps;\n    }\n\n\n    /**\n     * Given the output of the {@linkcode MemoryMap.overlapMemoryMaps|overlapMemoryMaps}\n     * (a <tt>Map</tt> of address to an <tt>Array</tt> of <tt>(id, Uint8Array)</tt> tuples),\n     * returns a {@linkcode MemoryMap}. This discards the IDs in the process.\n     *<br/>\n     * The output <tt>Map</tt> contains as many entries as the input one (using the same addresses\n     * as keys), but the value for each entry will be the <tt>Uint8Array</tt> of the <b>last</b>\n     * tuple for each address in the input data.\n     *<br/>\n     * The scenario is wanting to join together several parsed .hex files, not worrying about\n     * their overlaps.\n     *<br/>\n     *\n     * @param {Map.Array<mixed,Uint8Array>} overlaps The (possibly overlapping) input memory blocks\n     * @return {MemoryMap} The flattened memory blocks\n     */\n    static flattenOverlaps(overlaps) {\n        return new MemoryMap(\n            Array.from(overlaps.entries()).map(([address, tuples]) => {\n                return [address, tuples[tuples.length - 1][1] ];\n            })\n        );\n    }\n\n\n    /**\n     * Returns a new instance of {@linkcode MemoryMap}, where:\n     *\n     * <ul>\n     *  <li>Each key (the start address of each <tt>Uint8Array</tt>) is a multiple of\n     *    <tt>pageSize</tt></li>\n     *  <li>The size of each <tt>Uint8Array</tt> is exactly <tt>pageSize</tt></li>\n     *  <li>Bytes from the input map to bytes in the output</li>\n     *  <li>Bytes not in the input are replaced by a padding value</li>\n     * </ul>\n     *<br/>\n     * The scenario is wanting to prepare pages of bytes for a write operation, where the write\n     * operation affects a whole page/sector at once.\n     *<br/>\n     * The insertion order of keys in the output {@linkcode MemoryMap} is guaranteed\n     * to be strictly ascending. In other words, when iterating through the\n     * {@linkcode MemoryMap}, the addresses will be ordered in ascending order.\n     *<br/>\n     * The <tt>Uint8Array</tt>s in the output will be newly allocated.\n     *<br/>\n     *\n     * @param {Number} [pageSize=1024] The size of the output pages, in bytes\n     * @param {Number} [pad=0xFF] The byte value to use for padding\n     * @return {MemoryMap}\n     */\n    paginate( pageSize=1024, pad=0xFF) {\n        if (pageSize <= 0) {\n            throw new Error('Page size must be greater than zero');\n        }\n        const outPages = new MemoryMap();\n        let page;\n\n        const sortedKeys = Array.from(this.keys()).sort((a,b)=>a-b);\n\n        for (let i=0,l=sortedKeys.length; i<l; i++) {\n            const blockAddr = sortedKeys[i];\n            const block = this.get(blockAddr);\n            const blockLength = block.length;\n            const blockEnd = blockAddr + blockLength;\n\n            for (let pageAddr = blockAddr - (blockAddr % pageSize); pageAddr < blockEnd; pageAddr += pageSize) {\n                page = outPages.get(pageAddr);\n                if (!page) {\n                    page = new Uint8Array(pageSize);\n                    page.fill(pad);\n                    outPages.set(pageAddr, page);\n                }\n\n                const offset = pageAddr - blockAddr;\n                let subBlock;\n                if (offset <= 0) {\n                    // First page which intersects the block\n                    subBlock = block.subarray(0, Math.min(pageSize + offset, blockLength));\n                    page.set(subBlock, -offset);\n                } else {\n                    // Any other page which intersects the block\n                    subBlock = block.subarray(offset, offset + Math.min(pageSize, blockLength - offset));\n                    page.set(subBlock, 0);\n                }\n            }\n        }\n\n        return outPages;\n    }\n\n\n    /**\n     * Locates the <tt>Uint8Array</tt> which contains the given offset,\n     * and returns the four bytes held at that offset, as a 32-bit unsigned integer.\n     *\n     *<br/>\n     * Behaviour is similar to {@linkcode https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint32|DataView.prototype.getUint32},\n     * except that this operates over a {@linkcode MemoryMap} instead of\n     * over an <tt>ArrayBuffer</tt>, and that this may return <tt>undefined</tt> if\n     * the address is not <em>entirely</em> contained within one of the <tt>Uint8Array</tt>s.\n     *<br/>\n     *\n     * @param {Number} offset The memory offset to read the data\n     * @param {Boolean} [littleEndian=false] Whether to fetch the 4 bytes as a little- or big-endian integer\n     * @return {Number|undefined} An unsigned 32-bit integer number\n     */\n    getUint32(offset, littleEndian) {\n        const keys = Array.from(this.keys());\n\n        for (let i=0,l=keys.length; i<l; i++) {\n            const blockAddr = keys[i];\n            const block = this.get(blockAddr);\n            const blockLength = block.length;\n            const blockEnd = blockAddr + blockLength;\n\n            if (blockAddr <= offset && (offset+4) <= blockEnd) {\n                return (new DataView(block.buffer, offset - blockAddr, 4)).getUint32(0, littleEndian);\n            }\n        }\n        return;\n    }\n\n\n    /**\n     * Returns a <tt>String</tt> of text representing a .hex file.\n     * <br/>\n     * The writer has an opinionated behaviour. Check the project's\n     * {@link https://github.com/NordicSemiconductor/nrf-intel-hex#Features|README file} for details.\n     *\n     * @param {Number} [lineSize=16] Maximum number of bytes to be encoded in each data record.\n     * Must have a value between 1 and 255, as per the specification.\n     *\n     * @return {String} String of text with the .hex representation of the input binary data\n     *\n     * @example\n     * import MemoryMap from 'nrf-intel-hex';\n     *\n     * let memMap = new MemoryMap();\n     * let bytes = new Uint8Array(....);\n     * memMap.set(0x0FF80000, bytes); // The block with 'bytes' will start at offset 0x0FF80000\n     *\n     * let string = memMap.asHexString();\n     */\n    asHexString(lineSize = 16) {\n        let lowAddress  = 0;    // 16 least significant bits of the current addr\n        let highAddress = -1 << 16; // 16 most significant bits of the current addr\n        const records = [];\n        if (lineSize <=0) {\n            throw new Error('Size of record must be greater than zero');\n        } else if (lineSize > 255) {\n            throw new Error('Size of record must be less than 256');\n        }\n\n        // Placeholders\n        const offsetRecord = new Uint8Array(6);\n        const recordHeader = new Uint8Array(4);\n\n        const sortedKeys = Array.from(this.keys()).sort((a,b)=>a-b);\n        for (let i=0,l=sortedKeys.length; i<l; i++) {\n            const blockAddr = sortedKeys[i];\n            const block = this.get(blockAddr);\n\n            // Sanity checks\n            if (!(block instanceof Uint8Array)) {\n                throw new Error('Block at offset ' + blockAddr + ' is not an Uint8Array');\n            }\n            if (blockAddr < 0) {\n                throw new Error('Block at offset ' + blockAddr + ' has a negative thus invalid address');\n            }\n            const blockSize = block.length;\n            if (!blockSize) { continue; }   // Skip zero-length blocks\n\n\n            if (blockAddr > (highAddress + 0xFFFF)) {\n                // Insert a new 0x04 record to jump to a new 64KiB block\n\n                // Round up the least significant 16 bits - no bitmasks because they trigger\n                // base-2 negative numbers, whereas subtracting the modulo maintains precision\n                highAddress = blockAddr - blockAddr % 0x10000;\n                lowAddress = 0;\n\n                offsetRecord[0] = 2;    // Length\n                offsetRecord[1] = 0;    // Load offset, high byte\n                offsetRecord[2] = 0;    // Load offset, low byte\n                offsetRecord[3] = 4;    // Record type\n                offsetRecord[4] = highAddress >> 24;    // new address offset, high byte\n                offsetRecord[5] = highAddress >> 16;    // new address offset, low byte\n\n                records.push(\n                    ':' +\n                    Array.prototype.map.call(offsetRecord, hexpad).join('') +\n                    hexpad(checksum(offsetRecord))\n                );\n            }\n\n            if (blockAddr < (highAddress + lowAddress)) {\n                throw new Error(\n                    'Block starting at 0x' +\n                    blockAddr.toString(16) +\n                    ' overlaps with a previous block.');\n            }\n\n            lowAddress = blockAddr % 0x10000;\n            let blockOffset = 0;\n            const blockEnd = blockAddr + blockSize;\n            if (blockEnd > 0xFFFFFFFF) {\n                throw new Error('Data cannot be over 0xFFFFFFFF');\n            }\n\n            // Loop for every 64KiB memory segment that spans this block\n            while (highAddress + lowAddress < blockEnd) {\n\n                if (lowAddress > 0xFFFF) {\n                    // Insert a new 0x04 record to jump to a new 64KiB block\n                    highAddress += 1 << 16; // Increase by one\n                    lowAddress = 0;\n\n                    offsetRecord[0] = 2;    // Length\n                    offsetRecord[1] = 0;    // Load offset, high byte\n                    offsetRecord[2] = 0;    // Load offset, low byte\n                    offsetRecord[3] = 4;    // Record type\n                    offsetRecord[4] = highAddress >> 24;    // new address offset, high byte\n                    offsetRecord[5] = highAddress >> 16;    // new address offset, low byte\n\n                    records.push(\n                        ':' +\n                        Array.prototype.map.call(offsetRecord, hexpad).join('') +\n                        hexpad(checksum(offsetRecord))\n                    );\n                }\n\n                let recordSize = -1;\n                // Loop for every record for that spans the current 64KiB memory segment\n                while (lowAddress < 0x10000 && recordSize) {\n                    recordSize = Math.min(\n                        lineSize,                            // Normal case\n                        blockEnd - highAddress - lowAddress, // End of block\n                        0x10000 - lowAddress                 // End of low addresses\n                    );\n\n                    if (recordSize) {\n\n                        recordHeader[0] = recordSize;   // Length\n                        recordHeader[1] = lowAddress >> 8;    // Load offset, high byte\n                        recordHeader[2] = lowAddress;    // Load offset, low byte\n                        recordHeader[3] = 0;    // Record type\n\n                        const subBlock = block.subarray(blockOffset, blockOffset + recordSize);   // Data bytes for this record\n\n                        records.push(\n                            ':' +\n                            Array.prototype.map.call(recordHeader, hexpad).join('') +\n                            Array.prototype.map.call(subBlock, hexpad).join('') +\n                            hexpad(checksumTwo(recordHeader, subBlock))\n                        );\n\n                        blockOffset += recordSize;\n                        lowAddress += recordSize;\n                    }\n                }\n            }\n        }\n\n        records.push(':00000001FF');    // EOF record\n\n        return records.join('\\n');\n    }\n\n\n    /**\n     * Performs a deep copy of the current {@linkcode MemoryMap}, returning a new one\n     * with exactly the same contents, but allocating new memory for each of its\n     * <tt>Uint8Array</tt>s.\n     *\n     * @return {MemoryMap}\n     */\n    clone() {\n        const cloned = new MemoryMap();\n\n        for (let [addr, value] of this) {\n            cloned.set(addr, new Uint8Array(value));\n        }\n\n        return cloned;\n    }\n\n\n    /**\n     * Given one <tt>Uint8Array</tt>, looks through its contents and returns a new\n     * {@linkcode MemoryMap}, stripping away those regions where there are only\n     * padding bytes.\n     * <br/>\n     * The start of the input <tt>Uint8Array</tt> is assumed to be offset zero for the output.\n     * <br/>\n     * The use case here is dumping memory from a working device and try to see the\n     * \"interesting\" memory regions it has. This assumes that there is a constant,\n     * predefined padding byte value being used in the \"non-interesting\" regions.\n     * In other words: this will work as long as the dump comes from a flash memory\n     * which has been previously erased (thus <tt>0xFF</tt>s for padding), or from a\n     * previously blanked HDD (thus <tt>0x00</tt>s for padding).\n     * <br/>\n     * This method uses <tt>subarray</tt> on the input data, and thus does not allocate memory\n     * for the <tt>Uint8Array</tt>s.\n     *\n     * @param {Uint8Array} bytes The input data\n     * @param {Number} [padByte=0xFF] The value of the byte assumed to be used as padding\n     * @param {Number} [minPadLength=64] The minimum number of consecutive pad bytes to\n     * be considered actual padding\n     *\n     * @return {MemoryMap}\n     */\n    static fromPaddedUint8Array(bytes, padByte=0xFF, minPadLength=64) {\n\n        if (!(bytes instanceof Uint8Array)) {\n            throw new Error('Bytes passed to fromPaddedUint8Array are not an Uint8Array');\n        }\n\n        // The algorithm used is naïve and checks every byte.\n        // An obvious optimization would be to implement Boyer-Moore\n        // (see https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm )\n        // or otherwise start skipping up to minPadLength bytes when going through a non-pad\n        // byte.\n        // Anyway, we could expect a lot of cases where there is a majority of pad bytes,\n        // and the algorithm should check most of them anyway, so the perf gain is questionable.\n\n        const memMap = new MemoryMap();\n        let consecutivePads = 0;\n        let lastNonPad = -1;\n        let firstNonPad = 0;\n        let skippingBytes = false;\n        const l = bytes.length;\n\n        for (let addr = 0; addr < l; addr++) {\n            const byte = bytes[addr];\n\n            if (byte === padByte) {\n                consecutivePads++;\n                if (consecutivePads >= minPadLength) {\n                    // Edge case: ignore writing a zero-length block when skipping\n                    // bytes at the beginning of the input\n                    if (lastNonPad !== -1) {\n                        /// Add the previous block to the result memMap\n                        memMap.set(firstNonPad, bytes.subarray(firstNonPad, lastNonPad+1));\n                    }\n\n                    skippingBytes = true;\n                }\n            } else {\n                if (skippingBytes) {\n                    skippingBytes = false;\n                    firstNonPad = addr;\n                }\n                lastNonPad = addr;\n                consecutivePads = 0;\n            }\n        }\n\n        // At EOF, add the last block if not skipping bytes already (and input not empty)\n        if (!skippingBytes && lastNonPad !== -1) {\n            memMap.set(firstNonPad, bytes.subarray(firstNonPad, l));\n        }\n\n        return memMap;\n    }\n\n\n    /**\n     * Returns a new instance of {@linkcode MemoryMap}, containing only data between\n     * the addresses <tt>address</tt> and <tt>address + length</tt>.\n     * Behaviour is similar to {@linkcode https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/slice|Array.prototype.slice},\n     * in that the return value is a portion of the current {@linkcode MemoryMap}.\n     *\n     * <br/>\n     * The returned {@linkcode MemoryMap} might be empty.\n     *\n     * <br/>\n     * Internally, this uses <tt>subarray</tt>, so new memory is not allocated.\n     *\n     * @param {Number} address The start address of the slice\n     * @param {Number} length The length of memory map to slice out\n     * @return {MemoryMap}\n     */\n    slice(address, length = Infinity){\n        if (length < 0) {\n            throw new Error('Length of the slice cannot be negative');\n        }\n\n        const sliced = new MemoryMap();\n\n        for (let [blockAddr, block] of this) {\n            const blockLength = block.length;\n\n            if ((blockAddr + blockLength) >= address && blockAddr < (address + length)) {\n                const sliceStart = Math.max(address, blockAddr);\n                const sliceEnd = Math.min(address + length, blockAddr + blockLength);\n                const sliceLength = sliceEnd - sliceStart;\n                const relativeSliceStart = sliceStart - blockAddr;\n\n                if (sliceLength > 0) {\n                    sliced.set(sliceStart, block.subarray(relativeSliceStart, relativeSliceStart + sliceLength));\n                }\n            }\n        }\n        return sliced;\n    }\n\n    /**\n     * Returns a new instance of {@linkcode https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint32|Uint8Array}, containing only data between\n     * the addresses <tt>address</tt> and <tt>address + length</tt>. Any byte without a value\n     * in the input {@linkcode MemoryMap} will have a value of <tt>padByte</tt>.\n     *\n     * <br/>\n     * This method allocates new memory.\n     *\n     * @param {Number} address The start address of the slice\n     * @param {Number} length The length of memory map to slice out\n     * @param {Number} [padByte=0xFF] The value of the byte assumed to be used as padding\n     * @return {MemoryMap}\n     */\n    slicePad(address, length, padByte=0xFF){\n        if (length < 0) {\n            throw new Error('Length of the slice cannot be negative');\n        }\n        \n        const out = (new Uint8Array(length)).fill(padByte);\n\n        for (let [blockAddr, block] of this) {\n            const blockLength = block.length;\n\n            if ((blockAddr + blockLength) >= address && blockAddr < (address + length)) {\n                const sliceStart = Math.max(address, blockAddr);\n                const sliceEnd = Math.min(address + length, blockAddr + blockLength);\n                const sliceLength = sliceEnd - sliceStart;\n                const relativeSliceStart = sliceStart - blockAddr;\n\n                if (sliceLength > 0) {\n                    out.set(block.subarray(relativeSliceStart, relativeSliceStart + sliceLength), sliceStart - address);\n                }\n            }\n        }\n        return out;\n    }\n\n    /**\n     * Checks whether the current memory map contains the one given as a parameter.\n     *\n     * <br/>\n     * \"Contains\" means that all the offsets that have a byte value in the given\n     * memory map have a value in the current memory map, and that the byte values\n     * are the same.\n     *\n     * <br/>\n     * An empty memory map is always contained in any other memory map.\n     *\n     * <br/>\n     * Returns boolean <tt>true</tt> if the memory map is contained, <tt>false</tt>\n     * otherwise.\n     *\n     * @param {MemoryMap} memMap The memory map to check\n     * @return {Boolean}\n     */\n    contains(memMap) {\n        for (let [blockAddr, block] of memMap) {\n\n            const blockLength = block.length;\n\n            const slice = this.slice(blockAddr, blockLength).join().get(blockAddr);\n\n            if ((!slice) || slice.length !== blockLength ) {\n                return false;\n            }\n\n            for (const i in block) {\n                if (block[i] !== slice[i]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}\n\n\nexport default MemoryMap;\n\n","function TextEncoderLite() {\n}\nfunction TextDecoderLite() {\n}\n\n(function () {\n'use strict';\n\n// Taken from https://github.com/feross/buffer/blob/master/index.js\n// Thanks Feross et al! :-)\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n  var i = 0\n\n  for (; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (leadSurrogate) {\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          leadSurrogate = codePoint\n          continue\n        } else {\n          // valid surrogate pair\n          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n          leadSurrogate = null\n        }\n      } else {\n        // no lead yet\n\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else {\n          // valid lead\n          leadSurrogate = codePoint\n          continue\n        }\n      }\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n      leadSurrogate = null\n    }\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x200000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end || Infinity)\n  start = start || 0;\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\nTextEncoderLite.prototype.encode = function (str) {\n  var result;\n\n  if ('undefined' === typeof Uint8Array) {\n    result = utf8ToBytes(str);\n  } else {\n    result = new Uint8Array(utf8ToBytes(str));\n  }\n\n  return result;\n};\n\nTextDecoderLite.prototype.decode = function (bytes) {\n  return utf8Slice(bytes, 0, bytes.length);\n}\n\n}());\n\nif(typeof module === \"object\" && module) {\n  module.exports.TextDecoderLite = TextDecoderLite;\n  module.exports.TextEncoderLite = TextEncoderLite;\n}\n","/**\n * General utilities.\n *\n * (c) 2019 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport { TextDecoderLite, TextEncoderLite } from 'text-encoder-lite';\n\n/**\n * Converts a string into a byte array of characters.\n * @param str - String to convert to bytes.\n * @returns A byte array with the encoded data.\n */\nexport function strToBytes(str: string): Uint8Array {\n  const encoder = new TextEncoderLite();\n  return encoder.encode(str);\n}\n\n/**\n * Converts a byte array into a string of characters.\n * @param byteArray - Array of bytes to convert.\n * @returns String output from the conversion.\n */\nexport function bytesToStr(byteArray: Uint8Array): string {\n  const decoder = new TextDecoderLite();\n  return decoder.decode(byteArray);\n}\n\n/**\n * Concatenates two Uint8Arrays.\n *\n * @param first - The first array to concatenate.\n * @param second - The second array to concatenate.\n * @returns New array with both inputs concatenated.\n */\nexport const concatUint8Array = (first: Uint8Array, second: Uint8Array) => {\n  const combined: Uint8Array = new Uint8Array(first.length + second.length);\n  combined.set(first);\n  combined.set(second, first.length);\n  return combined;\n};\n\n/**\n * Compares two Uint8Array.\n *\n * @param first - The first array to compare.\n * @param second - The second array to compare.\n * @returns Boolean indicating if they are equal.\n */\nexport const areUint8ArraysEqual = (first: Uint8Array, second: Uint8Array) => {\n  if (first.length !== second.length) return false;\n  for (let i = 0; i < first.length; i++) {\n    if (first[i] !== second[i]) return false;\n  }\n  return true;\n};\n","/**\n * Module to add and remove Python scripts into and from a MicroPython hex.\n *\n * (c) 2019 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport MemoryMap from 'nrf-intel-hex';\n\nimport { bytesToStr, strToBytes } from './common';\n\n/** User script located at specific flash address. */\nenum AppendedBlock {\n  StartAdd = 0x3e000,\n  Length = 8 * 1024,\n  EndAdd = StartAdd + Length,\n}\n\n/** User code header */\nconst enum AppendedHeader {\n  Byte0 = 0,\n  Byte1 = 1,\n  CodeLengthLsb = 2,\n  CodeLengthMsb = 3,\n  Length = 4,\n}\n\n/** Start of user script marked by \"MP\" + 2 bytes for the script length. */\nconst HEADER_START_BYTE_0 = 77; // 'M'\nconst HEADER_START_BYTE_1 = 80; // 'P'\n\n/** How many bytes per Intel Hex record line. */\nconst HEX_RECORD_DATA_LEN = 16;\n\n/**\n * Marker placed inside the MicroPython hex string to indicate where to\n * inject the user Python Code.\n */\nconst HEX_INSERTION_POINT = ':::::::::::::::::::::::::::::::::::::::::::\\n';\n\n/**\n * Removes the old insertion line the input Intel Hex string contains it.\n *\n * @param intelHex - String with the intel hex lines.\n * @returns The Intel Hex string without insertion line.\n */\nexport function cleanseOldHexFormat(intelHex: string): string {\n  return intelHex.replace(HEX_INSERTION_POINT, '');\n}\n\n/**\n * Parses through an Intel Hex string to find the Python code at the\n * allocated address and extracts it.\n *\n * @param intelHex - Intel Hex block to scan for the code.\n * @return Python code.\n */\nfunction getIntelHexAppendedScript(intelHex: string): string {\n  let pyCode: string = '';\n  const hexFileMemMap: MemoryMap = MemoryMap.fromHex(intelHex);\n  // Check that the known flash location has user code\n  if (hexFileMemMap.has(AppendedBlock.StartAdd)) {\n    const pyCodeMemMap = hexFileMemMap.slice(\n      AppendedBlock.StartAdd,\n      AppendedBlock.Length\n    );\n    const codeBytes = pyCodeMemMap.get(AppendedBlock.StartAdd);\n    if (\n      codeBytes[AppendedHeader.Byte0] === HEADER_START_BYTE_0 &&\n      codeBytes[AppendedHeader.Byte1] === HEADER_START_BYTE_1\n    ) {\n      pyCode = bytesToStr(codeBytes.slice(AppendedHeader.Length));\n      // Clean null terminators at the end\n      pyCode = pyCode.replace(/\\0/g, '');\n    }\n  }\n  return pyCode;\n}\n\n/**\n * When the user code is inserted into the flash known location it needs to be\n * packed with a header. This function outputs a byte array with a fully formed\n * User Code Block.\n *\n * @param dataBytes - Array of bytes to include in the User Code block.\n * @returns Byte array with the full User Code Block.\n */\nfunction createAppendedBlock(dataBytes: Uint8Array): Uint8Array {\n  let blockLength = dataBytes.length + AppendedHeader.Length;\n  // Old DAPLink versions need padding on the last record to fill the line\n  if (blockLength % HEX_RECORD_DATA_LEN) {\n    blockLength += HEX_RECORD_DATA_LEN - (blockLength % HEX_RECORD_DATA_LEN);\n  }\n  const blockBytes: Uint8Array = new Uint8Array(blockLength).fill(0x00);\n  // The user script block has to start with \"MP\" marker + script length\n  blockBytes[0] = HEADER_START_BYTE_0;\n  blockBytes[1] = HEADER_START_BYTE_1;\n  blockBytes[2] = dataBytes.length & 0xff;\n  blockBytes[3] = (dataBytes.length >> 8) & 0xff;\n  blockBytes.set(dataBytes, AppendedHeader.Length);\n  return blockBytes;\n}\n\n/**\n * Converts the Python code into the Intel Hex format expected by\n * MicroPython and injects it into a Intel Hex string containing a marker.\n *\n * TODO: Throw error if filesystem is using the penultimate page already.\n *\n * @param intelHex - Single string of Intel Hex records to inject the code.\n * @param pyStr - Python code string.\n * @returns Intel Hex string with the Python code injected.\n */\nfunction addIntelHexAppendedScript(intelHex: string, pyCode: string): string {\n  const codeBytes: Uint8Array = strToBytes(pyCode);\n  const blockBytes: Uint8Array = createAppendedBlock(codeBytes);\n  if (blockBytes.length > AppendedBlock.Length) {\n    throw new RangeError('Too long');\n  }\n  // Convert to Intel Hex format\n  const intelHexClean = cleanseOldHexFormat(intelHex);\n  const intelHexMap: MemoryMap = MemoryMap.fromHex(intelHexClean);\n  intelHexMap.set(AppendedBlock.StartAdd, blockBytes);\n  // Older versions of DAPLink need the file to end in a new line\n  return intelHexMap.asHexString() + '\\n';\n}\n\n/**\n * Checks the Intel Hex memory map to see if there is an appended script.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n * @returns True if appended script is present, false otherwise.\n */\nfunction isAppendedScriptPresent(intelHex: MemoryMap | string): boolean {\n  let intelHexMap: MemoryMap;\n  if (typeof intelHex === 'string') {\n    const intelHexClean = cleanseOldHexFormat(intelHex);\n    intelHexMap = MemoryMap.fromHex(intelHexClean);\n  } else {\n    intelHexMap = intelHex;\n  }\n  const headerMagic = intelHexMap.slicePad(AppendedBlock.StartAdd, 2, 0xff);\n  return (\n    headerMagic[0] === HEADER_START_BYTE_0 &&\n    headerMagic[1] === HEADER_START_BYTE_1\n  );\n}\n\nexport {\n  AppendedBlock,\n  addIntelHexAppendedScript,\n  getIntelHexAppendedScript,\n  isAppendedScriptPresent,\n};\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n",null,"// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n",null,null,"require('./_typed-array')('Uint32', 4, function (init) {\n  return function Uint32Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","/**\n * Interprets the Flash Regions Table stored in flash.\n *\n * The micro:bit flash layout is divided in flash regions, each containing a\n * different type of data (Nordic SoftDevice, MicroPython, bootloader, etc).\n * One of the regions is dedicated to the micro:bit filesystem, and this info\n * is used by this library to add the user files into a MicroPython hex File.\n *\n * The Flash Regions Table stores a data table at the end of the last flash page\n * used by the MicroPython runtime.\n * The table contains a series of 16-byte rows with info about each region\n * and it ends with a 16-byte table header with info about the table itself.\n * All in little-endian format.\n *\n * ```\n * |                                                               | Low address\n * | ID| HT|1ST_PAG| REGION_LENGTH | HASH_DATA                     | Row 1\n * | ID| HT|1ST_PAG| REGION_LENGTH | HASH_DATA                     | ...\n * | ID| HT|1ST_PAG| REGION_LENGTH | HASH_DATA                     | Row N\n * | MAGIC_1       | VER   | T_LEN |REG_CNT| P_SIZE| MAGIC_2       | Header\n * |---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---| Page end\n * |0x0|0x1|0x2|0x3|0x4|0x5|0x6|0x7|0x8|0x9|0xa|0xb|0xc|0xd|0xe|0xf|\n * |---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n * ```\n *\n * More information about how this data is added to the MicroPython Intel Hex\n * file can be found in the MicroPython for micro:bit v2 repository:\n *   https://github.com/microbit-foundation/micropython-microbit-v2/blob/v2.0.0-beta.3/src/addlayouttable.py\n *\n * @packageDocumentation\n *\n * (c) 2020 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport MemoryMap from 'nrf-intel-hex';\n\nimport { DeviceMemInfo, DeviceVersion } from './device-mem-info';\nimport { areUint8ArraysEqual } from './common';\nimport * as hexMapUtil from './hex-map-utils';\n\n/** Indicates the data contain in each of the different regions */\nenum RegionId {\n  /** Soft Device is the data blob containing the Nordic Bluetooth stack. */\n  softDevice = 1,\n  /** Contains the MicroPython runtime. */\n  microPython = 2,\n  /** Contains the MicroPython microbit filesystem reserved flash. */\n  fs = 3,\n}\n\n/**\n * The \"hash type\" field in a region row indicates how to interpret the \"hash\n * data\" field.\n */\nenum RegionHashType {\n  /** The hash data is empty. */\n  empty = 0,\n  /** The full hash data field is used as a hash of the region in flash */\n  data = 1,\n  /** The 4 LSB bytes of the hash data field are used as a pointer  */\n  pointer = 2,\n}\n\n/**\n * The data stored in a Region row from the Flash Regions table.\n */\ninterface RegionRow {\n  /** The Region ID, as described in the RegionId enum. */\n  id: RegionId;\n  /** The flash page where this Region starts. */\n  startPage: number;\n  /** Length of the region in bytes. */\n  lengthBytes: number;\n  /** Identifies the type of data contained in the Hash Data field. */\n  hashType: RegionHashType;\n  /** Hash Data can be one of the types indicated in the RegionHashType enum. */\n  hashData: number;\n  /** When Hash Data is a pointer, this variable holds the pointed string. */\n  hashPointerData: string;\n}\n\n/**\n * The Flash Regions Table ends with a Header containing information about the\n * table itsel.\n */\ninterface TableHeader {\n  /** The flash page size in log2 format. */\n  pageSizeLog2: number;\n  /** The flash page size in bytes. */\n  pageSize: number;\n  /** The number of regions described in the table. */\n  regionCount: number;\n  /** The length in bytes of the table, excluding this header. */\n  tableLength: number;\n  /** The Flash Regions Table format version. */\n  version: number;\n  /** The address of this table header (useful for calculation row offsets). */\n  startAddress: number;\n  /** The end address of this table header. */\n  endAddress: number;\n}\n\n// Sizes for each of the fields in the Flash Regions Table header\nconst MAGIC2_LEN_BYTES = 4;\nconst P_SIZE_LOG2_LEN_BYTES = 2;\nconst NUM_REG_LEN_BYTES = 2;\nconst TABLE_LEN_LEN_BYTES = 2;\nconst VERSION_LEN_BYTES = 2;\nconst MAGIC_1_LEN_BYTES = 4;\n\n/**\n * Offset for each of the Table header fields, starting from the end of the row.\n *\n * These are the fields stored in each row for each of the regions, and\n * any additional region data from the Region interface is derived from this.\n *\n * |0x00|..|..|0x03|0x04|0x05|0x06|0x07|0x08|0x09|0x0a|0x0b|0x0c|..|..|0x0f|\n * |----|--|--|----|----|----|----|----|----|----|----|----|----|--|--|----|\n * | MAGIC_1       | VERSION |TABLE_LEN|REG_COUNT| P_SIZE  | MAGIC_2       |\n */\nenum RegionHeaderOffset {\n  magic2 = MAGIC2_LEN_BYTES,\n  pageSizeLog2 = magic2 + P_SIZE_LOG2_LEN_BYTES,\n  regionCount = pageSizeLog2 + NUM_REG_LEN_BYTES,\n  tableLength = regionCount + TABLE_LEN_LEN_BYTES,\n  version = tableLength + VERSION_LEN_BYTES,\n  magic1 = version + MAGIC_1_LEN_BYTES,\n}\n\n// Magic numbers to identify the Flash Regions Table in flash\nconst REGION_HEADER_MAGIC_1 = 0x597f30fe;\nconst REGION_HEADER_MAGIC_2 = 0xc1b1d79d;\n\n// Sizes for each of the fields in each Region row from the Flash Regions Table\nconst REGION_ID_BYTES = 1;\nconst REGION_HASH_TYPE_BYTES = 1;\nconst REGION_START_PAGE_BYTES = 2;\nconst REGION_LEN_BYTES = 4;\nconst REGION_HASH_DATA_BYTES = 8;\n\n/**\n * Offset for each of the Region row fields, starting from the end of the row.\n *\n * These are the fields stored in each row for each of the regions, and\n * any additional region data from the Region interface is derived from this.\n *\n * |0x00|0x01|0x02|0x03|0x04|0x05|0x06|0x07|0x08|..|..|..|..|..|..|0x0f|\n * |----|----|----|----|----|----|----|----|----|--|--|--|--|--|--|----|\n * | ID | HT |1ST_PAGE | REGION_LENGTH     | HASH_DATA                 |\n */\nenum RegionRowOffset {\n  hashData = REGION_HASH_DATA_BYTES,\n  lengthBytes = hashData + REGION_LEN_BYTES,\n  startPage = lengthBytes + REGION_START_PAGE_BYTES,\n  hashType = startPage + REGION_HASH_TYPE_BYTES,\n  id = hashType + REGION_ID_BYTES,\n}\nconst REGION_ROW_LEN_BYTES = RegionRowOffset.id;\n\n/**\n * Iterates through the provided Intel Hex Memory Map and tries to find the\n * Flash Regions Table header, by looking for the magic values at the end of\n * each flash page.\n *\n * TODO: Indicate here what errors can be thrown.\n *\n * @param iHexMap - Intel Hex memory map to scan for the Flash Regions Table.\n * @param pSize - Flash page size to scan at the end of each page.\n * @returns The table header data.\n */\nfunction getTableHeader(iHexMap: MemoryMap, pSize: number = 1024): TableHeader {\n  let endAddress = 0;\n  const magic1ToFind = new Uint8Array(\n    new Uint32Array([REGION_HEADER_MAGIC_1]).buffer\n  );\n  const magic2ToFind = new Uint8Array(\n    new Uint32Array([REGION_HEADER_MAGIC_2]).buffer\n  );\n  const mapEntries = iHexMap.paginate(pSize, 0xff).entries();\n  for (let iter = mapEntries.next(); !iter.done; iter = mapEntries.next()) {\n    if (!iter.value) continue;\n    const blockByteArray: Uint8Array = iter.value[1];\n    const subArrayMagic2 = blockByteArray.subarray(-RegionHeaderOffset.magic2);\n    if (\n      areUint8ArraysEqual(subArrayMagic2, magic2ToFind) &&\n      areUint8ArraysEqual(\n        blockByteArray.subarray(\n          -RegionHeaderOffset.magic1,\n          -(RegionHeaderOffset.magic1 - MAGIC_1_LEN_BYTES)\n        ),\n        magic1ToFind\n      )\n    ) {\n      const pageStartAddress: number = iter.value[0];\n      endAddress = pageStartAddress + pSize;\n      break;\n    }\n  }\n  // TODO: Throw an error if table is not found.\n\n  const version = hexMapUtil.getUint16(\n    iHexMap,\n    endAddress - RegionHeaderOffset.version\n  );\n  const tableLength = hexMapUtil.getUint16(\n    iHexMap,\n    endAddress - RegionHeaderOffset.tableLength\n  );\n  const regionCount = hexMapUtil.getUint16(\n    iHexMap,\n    endAddress - RegionHeaderOffset.regionCount\n  );\n  const pageSizeLog2 = hexMapUtil.getUint16(\n    iHexMap,\n    endAddress - RegionHeaderOffset.pageSizeLog2\n  );\n  const pageSize = Math.pow(2, pageSizeLog2);\n  const startAddress = endAddress - RegionHeaderOffset.magic1;\n\n  return {\n    pageSizeLog2,\n    pageSize,\n    regionCount,\n    tableLength,\n    version,\n    endAddress,\n    startAddress,\n  };\n}\n\n/**\n * Parses a Region rows from a Flash Regions Table inside the Intel Hex memory\n * map, which ends at the provided rowEndAddress.\n *\n * Since the Flash Regions Table is placed at the end of a page, we iterate\n * from the end to the beginning.\n *\n * @param iHexMap - Intel Hex memory map to scan for the Flash Regions Table.\n * @param rowEndAddress - Address at which the row ends (same as the address\n *    where the next row or table header starts).\n * @returns The Region info from the row.\n */\nfunction getRegionRow(iHexMap: MemoryMap, rowEndAddress: number): RegionRow {\n  const id = hexMapUtil.getUint8(iHexMap, rowEndAddress - RegionRowOffset.id);\n  const hashType = hexMapUtil.getUint8(\n    iHexMap,\n    rowEndAddress - RegionRowOffset.hashType\n  );\n  const hashData: number | string = hexMapUtil.getUint64(\n    iHexMap,\n    rowEndAddress - RegionRowOffset.hashData\n  );\n  let hashPointerData = '';\n  if (hashType === RegionHashType.pointer) {\n    // Pointer to a string in the hex is only 4 bytes instead of 8\n    hashPointerData = hexMapUtil.getString(iHexMap, hashData & 0xffffffff);\n  }\n  const startPage = hexMapUtil.getUint16(\n    iHexMap,\n    rowEndAddress - RegionRowOffset.startPage\n  );\n  const lengthBytes = hexMapUtil.getUint32(\n    iHexMap,\n    rowEndAddress - RegionRowOffset.lengthBytes\n  );\n\n  return {\n    id,\n    startPage,\n    lengthBytes,\n    hashType,\n    hashData,\n    hashPointerData,\n  };\n}\n\n/**\n * Reads the Flash Regions Table data from an Intel Hex map and retrieves the\n * MicroPython DeviceMemInfo data.\n *\n * @throws {Error} When the Magic Header is not present.\n * @throws {Error} When the MicroPython or FS regions are not found.\n *\n * @param intelHexMap - Memory map of the Intel Hex to scan.\n * @returns Object with the parsed data from the Flash Regions Table.\n */\nfunction getHexMapFlashRegionsData(iHexMap: MemoryMap): DeviceMemInfo {\n  // TODO: There is currently have some \"internal\" knowledge here and it's\n  // scanning the flash knowing the page size is 4 KBs\n  const tableHeader = getTableHeader(iHexMap, 4096);\n  const regionRows: { [id: string]: RegionRow } = {};\n  for (let i = 0; i < tableHeader.regionCount; i++) {\n    const rowEndAddress = tableHeader.startAddress - i * REGION_ROW_LEN_BYTES;\n    const regionRow = getRegionRow(iHexMap, rowEndAddress);\n    regionRows[regionRow.id] = regionRow;\n  }\n\n  if (!regionRows.hasOwnProperty(RegionId.microPython)) {\n    throw new Error(\n      'Could not find a MicroPython region in the regions table.'\n    );\n  }\n  if (!regionRows.hasOwnProperty(RegionId.fs)) {\n    throw new Error(\n      'Could not find a File System region in the regions table.'\n    );\n  }\n  // Have to manually set the start at address 0 even if regions don't cover it\n  const runtimeStartAddress = 0;\n\n  let runtimeEndAddress =\n    regionRows[RegionId.microPython].startPage * tableHeader.pageSize +\n    regionRows[RegionId.microPython].lengthBytes;\n  // The table is placed at the end of the last page used by MicroPython and we\n  // need to include it\n  runtimeEndAddress = tableHeader.endAddress;\n  const uPyVersion = regionRows[RegionId.microPython].hashPointerData;\n  const fsStartAddress =\n    regionRows[RegionId.fs].startPage * tableHeader.pageSize;\n  const fsEndAddress = fsStartAddress + regionRows[RegionId.fs].lengthBytes;\n\n  return {\n    flashPageSize: tableHeader.pageSize,\n    flashSize: 512 * 1024,\n    flashStartAddress: 0,\n    flashEndAddress: 512 * 1024,\n    runtimeStartAddress,\n    runtimeEndAddress,\n    fsStartAddress,\n    fsEndAddress,\n    uPyVersion,\n    deviceVersion: DeviceVersion.V2,\n  };\n}\n\n/**\n * Reads the Flash Regions Table data from an Intel Hex map and retrieves the\n * MicroPython DeviceMemInfo data.\n *\n * @throws {Error} When the Magic Header is not present.\n * @throws {Error} When the MicroPython or FS regions are not found.\n *\n * @param intelHex - MicroPython Intel Hex string.\n * @returns Object with the parsed data from the Flash Regions Table.\n */\nfunction getIntelHexFlashRegionsData(intelHex: string): DeviceMemInfo {\n  return getHexMapFlashRegionsData(MemoryMap.fromHex(intelHex));\n}\n\nexport { getHexMapFlashRegionsData, getIntelHexFlashRegionsData };\n","/**\n * Interprets the data stored in the UICR memory space.\n *\n * For more info:\n * https://microbit-micropython.readthedocs.io/en/latest/devguide/hexformat.html\n *\n * (c) 2019 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport MemoryMap from 'nrf-intel-hex';\n\nimport * as hexMapUtil from './hex-map-utils';\nimport { DeviceMemInfo } from './device-mem-info';\nimport { DeviceVersion } from './hex-mem-info';\n\nconst DEVICE_INFO = [\n  {\n    deviceVersion: DeviceVersion.V1,\n    magicHeader: 0x17eeb07c,\n    flashSize: 256 * 1024,\n    fsEnd: 256 * 1024,\n  },\n  {\n    deviceVersion: DeviceVersion.V2,\n    magicHeader: 0x47eeb07c,\n    flashSize: 512 * 1024,\n    fsEnd: 0x73000,\n  },\n];\n\nconst UICR_START: number = 0x10001000;\nconst UICR_CUSTOMER_OFFSET: number = 0x80;\nconst UICR_CUSTOMER_UPY_OFFSET: number = 0x40;\nconst UICR_UPY_START: number =\n  UICR_START + UICR_CUSTOMER_OFFSET + UICR_CUSTOMER_UPY_OFFSET;\n\nconst UPY_DELIMITER: number = 0xffffffff;\nconst UPY_REGIONS_TERMINATOR: number = 0x00000000;\n\nconst UPY_MAGIC_LEN: number = 4;\nconst UPY_END_MARKER_LEN: number = 4;\nconst UPY_PAGE_SIZE_LEN: number = 4;\nconst UPY_START_PAGE_LEN: number = 2;\nconst UPY_PAGES_USED_LEN: number = 2;\nconst UPY_DELIMITER_LEN: number = 4;\nconst UPY_VERSION_LEN: number = 4;\nconst UPY_REGIONS_TERMINATOR_LEN: number = 4;\n\n/** UICR Customer area addresses for MicroPython specific data. */\nenum MicropythonUicrAddress {\n  MagicValue = UICR_UPY_START,\n  EndMarker = MagicValue + UPY_MAGIC_LEN,\n  PageSize = EndMarker + UPY_END_MARKER_LEN,\n  StartPage = PageSize + UPY_PAGE_SIZE_LEN,\n  PagesUsed = StartPage + UPY_START_PAGE_LEN,\n  Delimiter = PagesUsed + UPY_PAGES_USED_LEN,\n  VersionLocation = Delimiter + UPY_DELIMITER_LEN,\n  RegionsTerminator = VersionLocation + UPY_REGIONS_TERMINATOR_LEN,\n  End = RegionsTerminator + UPY_VERSION_LEN,\n}\n\n/** MicroPython data stored in the UICR Customer area. */\ninterface MicropythonUicrData extends DeviceMemInfo {\n  uicrStartAddress: number;\n  uicrEndAddress: number;\n}\n\n/**\n * Check if the magic number for the MicroPython UICR data is present in the\n * Intel Hex memory map.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @return True if the magic number matches, false otherwise.\n */\nfunction confirmMagicValue(intelHexMap: MemoryMap): boolean {\n  const readMagicHeader = getMagicValue(intelHexMap);\n  for (const device of DEVICE_INFO) {\n    if (device.magicHeader === readMagicHeader) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Reads the UICR data that contains the Magic Value that indicates the\n * MicroPython presence in the hex data.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The Magic Value from UICR.\n */\nfunction getMagicValue(intelHexMap: MemoryMap): number {\n  return hexMapUtil.getUint32(intelHexMap, MicropythonUicrAddress.MagicValue);\n}\n\n/**\n * Reads the UICR data from an Intel Hex map and detects the device version.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The micro:bit board version.\n */\nfunction getDeviceVersion(intelHexMap: MemoryMap): DeviceVersion {\n  const readMagicHeader = getMagicValue(intelHexMap);\n  for (const device of DEVICE_INFO) {\n    if (device.magicHeader === readMagicHeader) {\n      return device.deviceVersion;\n    }\n  }\n  throw new Error('Cannot find device version, unknown UICR Magic value');\n}\n\n/**\n * Reads the UICR data from an Intel Hex map and retrieves the flash size.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The micro:bit flash size.\n */\nfunction getFlashSize(intelHexMap: MemoryMap): number {\n  const readMagicHeader = getMagicValue(intelHexMap);\n  for (const device of DEVICE_INFO) {\n    if (device.magicHeader === readMagicHeader) {\n      return device.flashSize;\n    }\n  }\n  throw new Error('Cannot find flash size, unknown UICR Magic value');\n}\n\n/**\n * Reads the UICR data from an Intel Hex map and retrieves the fs end address.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The micro:bit filesystem end address.\n */\nfunction getFsEndAddress(intelHexMap: MemoryMap): number {\n  const readMagicHeader = getMagicValue(intelHexMap);\n  for (const device of DEVICE_INFO) {\n    if (device.magicHeader === readMagicHeader) {\n      return device.fsEnd;\n    }\n  }\n  throw new Error('Cannot find fs end address, unknown UICR Magic value');\n}\n\n/**\n * Reads the UICR data that contains the flash page size.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The size of each flash page size.\n */\nfunction getPageSize(intelHexMap: MemoryMap): number {\n  const pageSize: number = hexMapUtil.getUint32(\n    intelHexMap,\n    MicropythonUicrAddress.PageSize\n  );\n  // Page size is stored as a log base 2\n  return Math.pow(2, pageSize);\n}\n\n/**\n * Reads the UICR data that contains the start page of the MicroPython runtime.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The start page number of the MicroPython runtime.\n */\nfunction getStartPage(intelHexMap: MemoryMap): number {\n  return hexMapUtil.getUint16(intelHexMap, MicropythonUicrAddress.StartPage);\n}\n\n/**\n * Reads the UICR data that contains the number of flash pages used by the\n * MicroPython runtime.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The number of pages used by the MicroPython runtime.\n */\nfunction getPagesUsed(intelHexMap: MemoryMap): number {\n  return hexMapUtil.getUint16(intelHexMap, MicropythonUicrAddress.PagesUsed);\n}\n\n/**\n * Reads the UICR data that contains the address of the location in flash where\n * the MicroPython version is stored.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns The address of the location in flash where the MicroPython version\n * is stored.\n */\nfunction getVersionLocation(intelHexMap: MemoryMap): number {\n  return hexMapUtil.getUint32(\n    intelHexMap,\n    MicropythonUicrAddress.VersionLocation\n  );\n}\n\n/**\n * Reads the UICR data from an Intel Hex map and retrieves the MicroPython data.\n *\n * @throws {Error} When the Magic Header is not present.\n *\n * @param intelHexMap - Memory map of the Intel Hex data.\n * @returns Object with the decoded UICR MicroPython data.\n */\nfunction getHexMapUicrData(intelHexMap: MemoryMap): MicropythonUicrData {\n  const uicrMap = intelHexMap.slice(UICR_UPY_START);\n  if (!confirmMagicValue(uicrMap)) {\n    throw new Error('Could not find valid MicroPython UICR data.');\n  }\n  const flashPageSize: number = getPageSize(uicrMap);\n  const flashSize: number = getFlashSize(uicrMap);\n  const startPage: number = getStartPage(uicrMap);\n  const flashStartAddress: number = startPage * flashPageSize;\n  const flashEndAddress: number = flashStartAddress + flashSize;\n  const pagesUsed: number = getPagesUsed(uicrMap);\n  const runtimeEndAddress: number = pagesUsed * flashPageSize;\n  const versionAddress: number = getVersionLocation(uicrMap);\n  const uPyVersion: string = hexMapUtil.getString(intelHexMap, versionAddress);\n  const deviceVersion: DeviceVersion = getDeviceVersion(uicrMap);\n  const fsEndAddress: number = getFsEndAddress(uicrMap);\n\n  return {\n    flashPageSize,\n    flashSize,\n    flashStartAddress,\n    flashEndAddress,\n    runtimeStartAddress: flashStartAddress,\n    runtimeEndAddress,\n    fsStartAddress: runtimeEndAddress,\n    fsEndAddress,\n    uicrStartAddress: MicropythonUicrAddress.MagicValue,\n    uicrEndAddress: MicropythonUicrAddress.End,\n    uPyVersion,\n    deviceVersion,\n  };\n}\n\n/**\n * Reads the UICR data from an Intel Hex string and retrieves the MicroPython\n * data.\n *\n * @throws {Error} When the Magic Header is not present.\n *\n * @param intelHex - MicroPython Intel Hex string.\n * @returns Object with the decoded UICR MicroPython data.\n */\nfunction getIntelHexUicrData(intelHex: string): MicropythonUicrData {\n  return getHexMapUicrData(MemoryMap.fromHex(intelHex));\n}\n\nexport { MicropythonUicrData, getHexMapUicrData, getIntelHexUicrData };\n","/**\n * Retrieves the device information stored inside a MicroPython hex file.\n *\n * (c) 2020 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport MemoryMap from 'nrf-intel-hex';\n\nimport { DeviceMemInfo, DeviceVersion } from './device-mem-info';\nimport * as flashRegions from './flash-regions';\nimport * as uicr from './uicr';\n\n/**\n * Attempts to retrieve the device memory data from an MicroPython Intel Hex\n * memory map.\n *\n * @param {MemoryMap} intelHexMap MicroPython Intel Hex memory map to scan.\n * @returns {DeviceMemInfo} Device data.\n */\nfunction getHexMapDeviceMemInfo(intelHexMap: MemoryMap): DeviceMemInfo {\n  let errorMsg = '';\n  try {\n    return uicr.getHexMapUicrData(intelHexMap);\n  } catch (err) {\n    errorMsg += err.message + '\\n';\n  }\n  try {\n    return flashRegions.getHexMapFlashRegionsData(intelHexMap);\n  } catch (err) {\n    throw new Error(errorMsg + err.message);\n  }\n}\n\n/**\n * Attempts to retrieve the device memory data from an MicroPython Intel Hex.\n *\n * @param intelHex - MicroPython Intel Hex string.\n * @returns {DeviceMemInfo} Device data.\n */\nfunction getIntelHexDeviceMemInfo(intelHex: string): DeviceMemInfo {\n  return getHexMapDeviceMemInfo(MemoryMap.fromHex(intelHex));\n}\n\nexport {\n  DeviceMemInfo,\n  DeviceVersion,\n  getHexMapDeviceMemInfo,\n  getIntelHexDeviceMemInfo,\n};\n","/**\n * Builds and reads a micro:bit MicroPython File System from Intel Hex data.\n *\n * Follows this implementation:\n * https://github.com/bbcmicrobit/micropython/blob/v1.0.1/source/microbit/filesystem.c\n *\n * How it works:\n * The File system size is calculated based on the UICR data addded to the\n * MicroPython final hex to determine the limits of the filesystem space.\n * Based on how many space there is available it calculates how many free\n * chunks it can fit, each chunk being of CHUNK_LEN size in bytes.\n * There is one spare page which holds persistent configuration data that is\n * used by MicroPython for bulk erasing, so we also mark it as such here.\n *\n * Each chunk is enumerated with an index number. The first chunk starts with\n * index 1 (as value 0 is reserved to indicate a Freed chunk) at the bottom of\n * the File System (lowest address), and the indexes increase sequentially.\n * Each chunk consists of a one byte marker at the head and a one tail byte.\n * The byte at the tail is a pointer to the next chunk index.\n * The head byte marker is either one of the values in the ChunkMarker enum, to\n * indicate the a special type of chunk, or a pointer to the previous chunk\n * index.\n * The special markers indicate whether the chunk is the start of a file, if it\n * is Unused, if it is Freed (same as unused, but not yet erased) or if this\n * is the start of a flash page used for Persistent Data (bulk erase operation).\n *\n * A file consists of a double linked list of chunks. The first chunk in a\n * file, indicated by the FileStart marker, contains the data end offset for\n * the last chunk and the file name.\n *\n * (c) 2019 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport MemoryMap from 'nrf-intel-hex';\n\nimport { bytesToStr, concatUint8Array, strToBytes } from './common';\nimport { AppendedBlock, isAppendedScriptPresent } from './micropython-appended';\nimport { getHexMapDeviceMemInfo, DeviceVersion } from './hex-mem-info';\n\n/** Object to contain cached data for quicker Intel Hex string generation */\ninterface MpFsBuilderCache {\n  originalIntelHex: string;\n  originalMemMap: MemoryMap;\n  uPyEndAddress: number;\n  uPyIntelHex: string;\n  fsSize: number;\n}\n\nconst enum ChunkMarker {\n  Freed = 0,\n  PersistentData = 0xfd,\n  FileStart = 0xfe,\n  Unused = 0xff,\n}\n\nconst enum ChunkFormatIndex {\n  Marker = 0,\n  EndOffset = 1,\n  NameLength = 2,\n  Tail = 127,\n}\n\n/** Sizes for the different parts of the file system chunks. */\nconst CHUNK_LEN = 128;\nconst CHUNK_MARKER_LEN = 1;\nconst CHUNK_TAIL_LEN = 1;\nconst CHUNK_DATA_LEN = CHUNK_LEN - CHUNK_MARKER_LEN - CHUNK_TAIL_LEN;\nconst CHUNK_HEADER_END_OFFSET_LEN = 1;\nconst CHUNK_HEADER_NAME_LEN = 1;\n\nconst MAX_FILENAME_LENGTH = 120;\n\n/**\n * Chunks are a double linked list with 1-byte pointers and the front marker\n * (previous pointer) cannot have the values listed in the ChunkMarker enum\n */\nconst MAX_NUMBER_OF_CHUNKS = 256 - 4;\n\n/**\n * To speed up the Intel Hex string generation with MicroPython and the\n * filesystem we can cache some of the Intel Hex records and the parsed Memory\n * Map. This function creates an object with cached data that can then be sent\n * to other functions from this module.\n *\n * @param originalIntelHex Intel Hex string with MicroPython to cache.\n * @returns Cached MpFsBuilderCache object.\n */\nfunction createMpFsBuilderCache(originalIntelHex: string): MpFsBuilderCache {\n  const originalMemMap = MemoryMap.fromHex(originalIntelHex);\n  const deviceMem = getHexMapDeviceMemInfo(originalMemMap);\n  // slice() returns a new MemoryMap with only the MicroPython data, so it will\n  // not include the UICR. The End Of File record is removed because this string\n  // will be concatenated with the filesystem data any thing else in the MemMap\n  const uPyIntelHex = originalMemMap\n    .slice(\n      deviceMem.runtimeStartAddress,\n      deviceMem.runtimeEndAddress - deviceMem.runtimeStartAddress\n    )\n    .asHexString()\n    .replace(':00000001FF', '');\n  return {\n    originalIntelHex,\n    originalMemMap,\n    uPyIntelHex,\n    uPyEndAddress: deviceMem.runtimeEndAddress,\n    fsSize: getMemMapFsSize(originalMemMap),\n  };\n}\n\n/**\n * Scans the file system area inside the Intel Hex data a returns a list of\n * available chunks.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n * @returns List of all unused chunks.\n */\nfunction getFreeChunks(intelHexMap: MemoryMap): number[] {\n  const freeChunks: number[] = [];\n  const startAddress: number = getStartAddress(intelHexMap);\n  const endAddress: number = getLastPageAddress(intelHexMap);\n  let chunkAddr = startAddress;\n  let chunkIndex = 1;\n  while (chunkAddr < endAddress) {\n    const marker = intelHexMap.slicePad(chunkAddr, 1, ChunkMarker.Unused)[0];\n    if (marker === ChunkMarker.Unused || marker === ChunkMarker.Freed) {\n      freeChunks.push(chunkIndex);\n    }\n    chunkIndex++;\n    chunkAddr += CHUNK_LEN;\n  }\n  return freeChunks;\n}\n\n/**\n * Calculates from the input Intel Hex where the MicroPython runtime ends and\n * and where the start of the filesystem would be based on that.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n * @returns Filesystem start address\n */\nfunction getStartAddress(intelHexMap: MemoryMap): number {\n  const deviceMem = getHexMapDeviceMemInfo(intelHexMap);\n  // Calculate the maximum flash space the filesystem can possible take\n  const fsMaxSize = CHUNK_LEN * MAX_NUMBER_OF_CHUNKS;\n  // The persistent data page is the last page of the filesystem space\n  // no need to add it in calculations\n\n  // There might more free space than the filesystem needs, in that case\n  // we move the start address down\n  const startAddressForMaxFs = getEndAddress(intelHexMap) - fsMaxSize;\n  const startAddress = Math.max(deviceMem.fsStartAddress, startAddressForMaxFs);\n  // Ensure the start address is aligned with the page size\n  if (startAddress % deviceMem.flashPageSize) {\n    throw new Error(\n      'File system start address from UICR does not align with flash page size.'\n    );\n  }\n  return startAddress;\n}\n\n/**\n * Calculates the end address for the filesystem.\n *\n * Start from the end of flash, or from the top of appended script if\n * one is included in the Intel Hex data.\n * Then move one page up as it is used for the magnetometer calibration data.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n * @returns End address for the filesystem.\n */\nfunction getEndAddress(intelHexMap: MemoryMap): number {\n  const deviceMem = getHexMapDeviceMemInfo(intelHexMap);\n  let endAddress = deviceMem.fsEndAddress;\n  // TODO: Maybe we should move this inside the UICR module to calculate\n  // the real fs area in that step\n  if (deviceMem.deviceVersion === DeviceVersion.V1) {\n    if (isAppendedScriptPresent(intelHexMap)) {\n      endAddress = AppendedBlock.StartAdd;\n    }\n    // In v1 the magnetometer calibration data takes one flash page\n    endAddress -= deviceMem.flashPageSize;\n  }\n  return endAddress;\n}\n\n/**\n * Calculates the address for the last page available to the filesystem.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n * @returns Memory address where the last filesystem page starts.\n */\nfunction getLastPageAddress(intelHexMap: MemoryMap): number {\n  const deviceMem = getHexMapDeviceMemInfo(intelHexMap);\n  return getEndAddress(intelHexMap) - deviceMem.flashPageSize;\n}\n\n/**\n * If not present already, it sets the persistent page in flash.\n *\n * This page can be located right below or right on top of the filesystem\n * space.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n */\nfunction setPersistentPage(intelHexMap: MemoryMap): void {\n  // At the moment we place this persistent page at the end of the filesystem\n  // TODO: This could be set to the first or the last page. Check first if it\n  //  exists, if it doesn't then randomise its location.\n  intelHexMap.set(\n    getLastPageAddress(intelHexMap),\n    new Uint8Array([ChunkMarker.PersistentData])\n  );\n}\n\n/**\n * Calculate the flash memory address from the chunk index.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n * @param chunkIndex - Index for the chunk to calculate.\n * @returns Address in flash for the chunk.\n */\nfunction chuckIndexAddress(intelHexMap: MemoryMap, chunkIndex: number): number {\n  // Chunk index starts at 1, so we need to account for that in the calculation\n  return getStartAddress(intelHexMap) + (chunkIndex - 1) * CHUNK_LEN;\n}\n\n/**\n * Class to contain file data and generate its MicroPython filesystem\n * representation.\n */\nclass FsFile {\n  private _filename: string;\n  private _filenameBytes: Uint8Array;\n  private _dataBytes: Uint8Array;\n  private _fsDataBytes: Uint8Array;\n\n  /**\n   * Create a file.\n   *\n   * @param filename - Name for the file.\n   * @param data - Byte array with the file data.\n   */\n  constructor(filename: string, data: Uint8Array) {\n    this._filename = filename;\n    this._filenameBytes = strToBytes(filename);\n    if (this._filenameBytes.length > MAX_FILENAME_LENGTH) {\n      throw new Error(\n        `File name \"${filename}\" is too long ` +\n          `(max ${MAX_FILENAME_LENGTH} characters).`\n      );\n    }\n    this._dataBytes = data;\n    // Generate a single byte array with the filesystem data bytes.\n    // When MicroPython uses up to the last byte of the last chunk it will\n    // still consume the next chunk, and leave it blank\n    // To replicate the same behaviour we add an extra 0xFF to the data block\n    const fileHeader = this._generateFileHeaderBytes();\n    this._fsDataBytes = new Uint8Array(\n      fileHeader.length + this._dataBytes.length + 1\n    );\n    this._fsDataBytes.set(fileHeader, 0);\n    this._fsDataBytes.set(this._dataBytes, fileHeader.length);\n    this._fsDataBytes[this._fsDataBytes.length - 1] = 0xff;\n  }\n\n  /**\n   * Generate an array of file system chunks for all this file content.\n   *\n   * @throws {Error} When there are not enough chunks available.\n   *\n   * @param freeChunks - List of available chunks to use.\n   * @returns An array of byte arrays, one item per chunk.\n   */\n  getFsChunks(freeChunks: number[]): Uint8Array[] {\n    // Now form the chunks\n    const chunks = [];\n    let freeChunksIndex = 0;\n    let dataIndex = 0;\n    // Prepare first chunk where the marker indicates a file start\n    let chunk = new Uint8Array(CHUNK_LEN).fill(0xff);\n    chunk[ChunkFormatIndex.Marker] = ChunkMarker.FileStart;\n    let loopEnd = Math.min(this._fsDataBytes.length, CHUNK_DATA_LEN);\n    for (let i = 0; i < loopEnd; i++, dataIndex++) {\n      chunk[CHUNK_MARKER_LEN + i] = this._fsDataBytes[dataIndex];\n    }\n    chunks.push(chunk);\n\n    // The rest of the chunks follow the same pattern\n    while (dataIndex < this._fsDataBytes.length) {\n      freeChunksIndex++;\n      if (freeChunksIndex >= freeChunks.length) {\n        throw new Error(`Not enough space for the ${this._filename} file.`);\n      }\n      // The previous chunk has to be followed by this one, so add this index\n      const previousChunk = chunks[chunks.length - 1];\n      previousChunk[ChunkFormatIndex.Tail] = freeChunks[freeChunksIndex];\n\n      chunk = new Uint8Array(CHUNK_LEN).fill(0xff);\n      // This chunk Marker points to the previous chunk\n      chunk[ChunkFormatIndex.Marker] = freeChunks[freeChunksIndex - 1];\n      // Add the data to this chunk\n      loopEnd = Math.min(this._fsDataBytes.length - dataIndex, CHUNK_DATA_LEN);\n      for (let i = 0; i < loopEnd; i++, dataIndex++) {\n        chunk[CHUNK_MARKER_LEN + i] = this._fsDataBytes[dataIndex];\n      }\n      chunks.push(chunk);\n    }\n    return chunks;\n  }\n\n  /**\n   * Generate a single byte array with the filesystem data for this file.\n   *\n   * @param freeChunks - List of available chunks to use.\n   * @returns A byte array with the data to go straight into flash.\n   */\n  getFsBytes(freeChunks: number[]): Uint8Array {\n    const chunks = this.getFsChunks(freeChunks);\n    const chunksLen = chunks.length * CHUNK_LEN;\n    const fileFsBytes = new Uint8Array(chunksLen);\n    for (let i = 0; i < chunks.length; i++) {\n      fileFsBytes.set(chunks[i], CHUNK_LEN * i);\n    }\n    return fileFsBytes;\n  }\n\n  /**\n   * @returns Size, in bytes, of how much space the file takes in the filesystem\n   *     flash memory.\n   */\n  getFsFileSize(): number {\n    const chunksUsed = Math.ceil(this._fsDataBytes.length / CHUNK_DATA_LEN);\n    return chunksUsed * CHUNK_LEN;\n  }\n\n  /**\n   * Generates a byte array for the file header as expected by the MicroPython\n   * file system.\n   *\n   * @return Byte array with the header data.\n   */\n  private _generateFileHeaderBytes(): Uint8Array {\n    const headerSize =\n      CHUNK_HEADER_END_OFFSET_LEN +\n      CHUNK_HEADER_NAME_LEN +\n      this._filenameBytes.length;\n    const endOffset = (headerSize + this._dataBytes.length) % CHUNK_DATA_LEN;\n    const fileNameOffset: number = headerSize - this._filenameBytes.length;\n    // Format header byte array\n    const headerBytes: Uint8Array = new Uint8Array(headerSize);\n    headerBytes[ChunkFormatIndex.EndOffset - 1] = endOffset;\n    headerBytes[ChunkFormatIndex.NameLength - 1] = this._filenameBytes.length;\n    for (let i = fileNameOffset; i < headerSize; ++i) {\n      headerBytes[i] = this._filenameBytes[i - fileNameOffset];\n    }\n    return headerBytes;\n  }\n}\n\n/**\n * @returns Size, in bytes, of how much space the file would take in the\n *     MicroPython filesystem.\n */\nfunction calculateFileSize(filename: string, data: Uint8Array): number {\n  const file = new FsFile(filename, data);\n  return file.getFsFileSize();\n}\n\n/**\n * Adds a byte array as a file into a MicroPython Memory Map.\n *\n * @throws {Error} When the invalid file name is given.\n * @throws {Error} When the the file doesn't have any data.\n * @throws {Error} When there are issues calculating the file system boundaries.\n * @throws {Error} When there is no space left for the file.\n *\n * @param intelHexMap - Memory map for the MicroPython Intel Hex.\n * @param filename - Name for the file.\n * @param data - Byte array for the file data.\n */\nfunction addMemMapFile(\n  intelHexMap: MemoryMap,\n  filename: string,\n  data: Uint8Array\n) {\n  if (!filename) throw new Error('File has to have a file name.');\n  if (!data.length) throw new Error(`File ${filename} has to contain data.`);\n\n  const freeChunks = getFreeChunks(intelHexMap);\n  if (freeChunks.length === 0) {\n    throw new Error('There is no storage space left.');\n  }\n  const chunksStartAddress = chuckIndexAddress(intelHexMap, freeChunks[0]);\n  // Create a file, generate and inject filesystem data.\n  const fsFile = new FsFile(filename, data);\n  const fileFsBytes = fsFile.getFsBytes(freeChunks);\n  intelHexMap.set(chunksStartAddress, fileFsBytes);\n  setPersistentPage(intelHexMap);\n}\n\n/**\n * Adds a hash table of filenames and byte arrays as files to the MicroPython\n * filesystem.\n *\n * @throws {Error} When the an invalid file name is given.\n * @throws {Error} When a file doesn't have any data.\n * @throws {Error} When there are issues calculating the file system boundaries.\n * @throws {Error} When there is no space left for a file.\n *\n * @param intelHex - MicroPython Intel Hex string or MemoryMap.\n * @param files - Hash table with filenames as the key and byte arrays as the\n *     value.\n * @returns MicroPython Intel Hex string with the files in the filesystem.\n */\nfunction addIntelHexFiles(\n  intelHex: string | MemoryMap,\n  files: { [filename: string]: Uint8Array },\n  returnBytes: boolean = false\n): string | Uint8Array {\n  let intelHexMap: MemoryMap;\n  if (typeof intelHex === 'string') {\n    intelHexMap = MemoryMap.fromHex(intelHex);\n  } else {\n    intelHexMap = intelHex.clone();\n  }\n  const deviceMem = getHexMapDeviceMemInfo(intelHexMap);\n  Object.keys(files).forEach((filename) => {\n    addMemMapFile(intelHexMap, filename, files[filename]);\n  });\n  return returnBytes\n    ? intelHexMap.slicePad(0, deviceMem.flashSize)\n    : intelHexMap.asHexString() + '\\n';\n}\n\n/**\n * Generates an Intel Hex string with MicroPython and files in the filesystem.\n *\n * Uses pre-cached MicroPython memory map and Intel Hex string of record to\n * speed up the Intel Hex generation compared to addIntelHexFiles().\n *\n * @param cache - Object with cached data from createMpFsBuilderCache().\n * @param files - Hash table with filenames as the key and byte arrays as the\n *     value.\n * @returns MicroPython Intel Hex string with the files in the filesystem.\n */\nfunction generateHexWithFiles(\n  cache: MpFsBuilderCache,\n  files: { [filename: string]: Uint8Array }\n): string {\n  const memMapWithFiles = cache.originalMemMap.clone();\n  Object.keys(files).forEach((filename) => {\n    addMemMapFile(memMapWithFiles, filename, files[filename]);\n  });\n  return (\n    cache.uPyIntelHex +\n    memMapWithFiles.slice(cache.uPyEndAddress).asHexString() +\n    '\\n'\n  );\n}\n\n/**\n * Reads the filesystem included in a MicroPython Intel Hex string or Map.\n *\n * @throws {Error} When multiple files with the same name encountered.\n * @throws {Error} When a file chunk points to an unused chunk.\n * @throws {Error} When a file chunk marker does not point to previous chunk.\n * @throws {Error} When following through the chunks linked list iterates\n *     through more chunks and used chunks (sign of an infinite loop).\n *\n * @param intelHex - The MicroPython Intel Hex string or MemoryMap to read from.\n * @returns Dictionary with the filename as key and byte array as values.\n */\nfunction getIntelHexFiles(\n  intelHex: string | MemoryMap\n): { [filename: string]: Uint8Array } {\n  let hexMap: MemoryMap;\n  if (typeof intelHex === 'string') {\n    hexMap = MemoryMap.fromHex(intelHex);\n  } else {\n    hexMap = intelHex.clone();\n  }\n  const startAddress: number = getStartAddress(hexMap);\n  const endAddress: number = getLastPageAddress(hexMap);\n\n  // TODO: endAddress as the getLastPageAddress works now because this\n  // library uses the last page as the \"persistent\" page, so the filesystem does\n  // end there. In reality, the persistent page could be the first or the last\n  // page, so we should get the end address as the magnetometer page and then\n  // check if the persistent marker is present in the first of last page and\n  // take that into account in the memory range calculation.\n  // Note that the persistent marker is only present at the top of the page\n\n  // Iterate through the filesystem to collect used chunks and file starts\n  const usedChunks: { [index: number]: Uint8Array } = {};\n  const startChunkIndexes: number[] = [];\n  let chunkAddr = startAddress;\n  let chunkIndex = 1;\n  while (chunkAddr < endAddress) {\n    const chunk = hexMap.slicePad(chunkAddr, CHUNK_LEN, ChunkMarker.Unused);\n    const marker = chunk[0];\n    if (\n      marker !== ChunkMarker.Unused &&\n      marker !== ChunkMarker.Freed &&\n      marker !== ChunkMarker.PersistentData\n    ) {\n      usedChunks[chunkIndex] = chunk;\n      if (marker === ChunkMarker.FileStart) {\n        startChunkIndexes.push(chunkIndex);\n      }\n    }\n    chunkIndex++;\n    chunkAddr += CHUNK_LEN;\n  }\n\n  // Go through the list of file-starts, follow the file chunks and collect data\n  const files: { [filename: string]: Uint8Array } = {};\n  for (const startChunkIndex of startChunkIndexes) {\n    const startChunk = usedChunks[startChunkIndex];\n    const endChunkOffset = startChunk[ChunkFormatIndex.EndOffset];\n    const filenameLen = startChunk[ChunkFormatIndex.NameLength];\n    // 1st byte is the marker, 2nd is the offset, 3rd is the filename length\n    let chunkDataStart = 3 + filenameLen;\n    const filename = bytesToStr(startChunk.slice(3, chunkDataStart));\n    if (files.hasOwnProperty(filename)) {\n      throw new Error(`Found multiple files named: ${filename}.`);\n    }\n    files[filename] = new Uint8Array(0);\n    let currentChunk = startChunk;\n    let currentIndex = startChunkIndex;\n    // Chunks are basically a double linked list, so invalid data could create\n    // an infinite loop. No file should traverse more chunks than available.\n    let iterations = Object.keys(usedChunks).length + 1;\n    while (iterations--) {\n      const nextIndex = currentChunk[ChunkFormatIndex.Tail];\n      if (nextIndex === ChunkMarker.Unused) {\n        // The current chunk is the last\n        files[filename] = concatUint8Array(\n          files[filename],\n          currentChunk.slice(chunkDataStart, 1 + endChunkOffset)\n        );\n        break;\n      } else {\n        files[filename] = concatUint8Array(\n          files[filename],\n          currentChunk.slice(chunkDataStart, ChunkFormatIndex.Tail)\n        );\n      }\n      const nextChunk = usedChunks[nextIndex];\n      if (!nextChunk) {\n        throw new Error(\n          `Chunk ${currentIndex} points to unused index ${nextIndex}.`\n        );\n      }\n      if (nextChunk[ChunkFormatIndex.Marker] !== currentIndex) {\n        throw new Error(\n          `Chunk index ${nextIndex} did not link to previous chunk index ${currentIndex}.`\n        );\n      }\n      currentChunk = nextChunk;\n      currentIndex = nextIndex;\n      // Start chunk data has a unique start, all others start after marker\n      chunkDataStart = 1;\n    }\n    if (iterations <= 0) {\n      // We iterated through chunks more often than available chunks\n      throw new Error('Malformed file chunks did not link correctly.');\n    }\n  }\n\n  return files;\n}\n\n/**\n * Calculate the MicroPython filesystem size.\n *\n * @param intelHexMap - The MicroPython Intel Hex Memory Map.\n * @returns Size of the filesystem in bytes.\n */\nfunction getMemMapFsSize(intelHexMap: MemoryMap): number {\n  const deviceMem = getHexMapDeviceMemInfo(intelHexMap);\n  const startAddress = getStartAddress(intelHexMap);\n  const endAddress = getEndAddress(intelHexMap);\n  // One extra page is used as persistent page\n  return endAddress - startAddress - deviceMem.flashPageSize;\n}\n\nexport {\n  MpFsBuilderCache,\n  createMpFsBuilderCache,\n  addIntelHexFiles,\n  generateHexWithFiles,\n  calculateFileSize,\n  getIntelHexFiles,\n  getMemMapFsSize,\n};\n","/**\n * Class to represent a very simple file.\n *\n * (c) 2019 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport { bytesToStr, strToBytes } from './common';\n\nexport class SimpleFile {\n  filename: string;\n  private _dataBytes: Uint8Array;\n\n  /**\n   * Create a SimpleFile.\n   *\n   * @throws {Error} When an invalid filename is provided.\n   * @throws {Error} When invalid file data is provided.\n   *\n   * @param filename - Name for the file.\n   * @param data - String or byte array with the file data.\n   */\n  constructor(filename: string, data: string | Uint8Array) {\n    if (!filename) {\n      throw new Error('File was not provided a valid filename.');\n    }\n    if (!data) {\n      throw new Error(`File ${filename} does not have valid content.`);\n    }\n    this.filename = filename;\n    if (typeof data === 'string') {\n      this._dataBytes = strToBytes(data);\n    } else if (data instanceof Uint8Array) {\n      this._dataBytes = data;\n    } else {\n      throw new Error('File data type must be a string or Uint8Array.');\n    }\n  }\n\n  getText(): string {\n    return bytesToStr(this._dataBytes);\n  }\n\n  getBytes(): Uint8Array {\n    return this._dataBytes;\n  }\n}\n","/**\n * Filesystem management for MicroPython hex files.\n *\n * (c) 2019 Micro:bit Educational Foundation and the microbit-fs contributors.\n * SPDX-License-Identifier: MIT\n */\nimport * as microbitUh from '@microbit/microbit-universal-hex';\n\nimport { FsInterface } from './fs-interface';\nimport {\n  MpFsBuilderCache,\n  createMpFsBuilderCache,\n  generateHexWithFiles,\n  addIntelHexFiles,\n  calculateFileSize,\n  getIntelHexFiles,\n} from './micropython-fs-builder';\nimport { SimpleFile } from './simple-file';\nimport { areUint8ArraysEqual } from './common';\n\n/**\n * The Board ID is used to identify the different targets from a Universal Hex.\n * In this case the target represents a micro:bit version.\n * For micro:bit V1 (v1.3, v1.3B and v1.5) the `boardId` is `0x9900`, and for\n * V2 `0x9903`.\n * This is being re-exported from the @microbit/microbit-universal-hex package.\n */\nexport import microbitBoardId = microbitUh.microbitBoardId;\n\n/**\n * Extends the interface from microbit-fs-building to include the board ID that\n * corresponds to each of the cached objects.\n */\ninterface MpFsBuilderCacheWithId extends MpFsBuilderCache {\n  boardId: number | microbitBoardId;\n}\n\n/**\n * Simple interface to pair an Intel Hex string with the board ID it represents.\n */\nexport interface IntelHexWithId {\n  /** Intel Hex string */\n  hex: string;\n  /** Board ID to identify the Intel Hex and encode inside the Universal Hex */\n  boardId: number | microbitBoardId;\n}\n\n/**\n * Options for importing Hex files into a MicropythonFsHex instance.\n */\nexport interface ImportOptions {\n  overwrite?: boolean;\n  formatFirst?: boolean;\n}\n\n/**\n * Manage filesystem files in one or multiple MicroPython hex files.\n *\n * @public\n */\nexport class MicropythonFsHex implements FsInterface {\n  private _uPyFsBuilderCache: MpFsBuilderCacheWithId[] = [];\n  private _files: { [id: string]: SimpleFile } = {};\n  private _storageSize: number = 0;\n\n  /**\n   * File System manager constructor.\n   *\n   * At the moment it needs a MicroPython hex string without files included.\n   * Multiple MicroPython images can be provided to generate a Universal Hex.\n   *\n   * @throws {Error} When any of the input iHex contains filesystem files.\n   * @throws {Error} When any of the input iHex is not a valid MicroPython hex.\n   *\n   * @param intelHex - MicroPython Intel Hex string or an array of Intel Hex\n   *    strings with their respective board IDs.\n   */\n  constructor(\n    intelHex: string | IntelHexWithId[],\n    { maxFsSize = 0 }: { maxFsSize?: number } = {}\n  ) {\n    const hexWithIdArray: IntelHexWithId[] = Array.isArray(intelHex)\n      ? intelHex\n      : [\n          {\n            hex: intelHex,\n            boardId: 0x0000,\n          },\n        ];\n\n    // Generate and store the MicroPython Builder caches\n    let minFsSize = Infinity;\n    hexWithIdArray.forEach((hexWithId) => {\n      if (!hexWithId.hex) {\n        throw new Error('Invalid MicroPython hex.');\n      }\n      const builderCache = createMpFsBuilderCache(hexWithId.hex);\n      const thisBuilderCache: MpFsBuilderCacheWithId = {\n        originalIntelHex: builderCache.originalIntelHex,\n        originalMemMap: builderCache.originalMemMap,\n        uPyEndAddress: builderCache.uPyEndAddress,\n        uPyIntelHex: builderCache.uPyIntelHex,\n        fsSize: builderCache.fsSize,\n        boardId: hexWithId.boardId,\n      };\n      this._uPyFsBuilderCache.push(thisBuilderCache);\n      minFsSize = Math.min(minFsSize, thisBuilderCache.fsSize);\n    });\n    this.setStorageSize(maxFsSize || minFsSize);\n\n    // Check if there are files in any of the input hex\n    this._uPyFsBuilderCache.forEach((builderCache) => {\n      const hexFiles = getIntelHexFiles(builderCache.originalMemMap);\n      if (Object.keys(hexFiles).length) {\n        throw new Error(\n          'There are files in the MicropythonFsHex constructor hex file input.'\n        );\n      }\n    });\n  }\n\n  /**\n   * Create a new file and add it to the file system.\n   *\n   * @throws {Error} When the file already exists.\n   * @throws {Error} When an invalid filename is provided.\n   * @throws {Error} When invalid file data is provided.\n   *\n   * @param filename - Name for the file.\n   * @param content - File content to write.\n   */\n  create(filename: string, content: string | Uint8Array): void {\n    if (this.exists(filename)) {\n      throw new Error('File already exists.');\n    }\n    this.write(filename, content);\n  }\n\n  /**\n   * Write a file into the file system. Overwrites a previous file with the\n   * same name.\n   *\n   * @throws {Error} When an invalid filename is provided.\n   * @throws {Error} When invalid file data is provided.\n   *\n   * @param filename - Name for the file.\n   * @param content - File content to write.\n   */\n  write(filename: string, content: string | Uint8Array): void {\n    this._files[filename] = new SimpleFile(filename, content);\n  }\n\n  append(filename: string, content: string): void {\n    if (!filename) {\n      throw new Error('Invalid filename.');\n    }\n    if (!this.exists(filename)) {\n      throw new Error(`File \"${filename}\" does not exist.`);\n    }\n    // TODO: Implement this.\n    throw new Error('Append operation not yet implemented.');\n  }\n\n  /**\n   * Read the text from a file.\n   *\n   * @throws {Error} When invalid file name is provided.\n   * @throws {Error} When file is not in the file system.\n   *\n   * @param filename - Name of the file to read.\n   * @returns Text from the file.\n   */\n  read(filename: string): string {\n    if (!filename) {\n      throw new Error('Invalid filename.');\n    }\n    if (!this.exists(filename)) {\n      throw new Error(`File \"${filename}\" does not exist.`);\n    }\n    return this._files[filename].getText();\n  }\n\n  /**\n   * Read the bytes from a file.\n   *\n   * @throws {Error} When invalid file name is provided.\n   * @throws {Error} When file is not in the file system.\n   *\n   * @param filename - Name of the file to read.\n   * @returns Byte array from the file.\n   */\n  readBytes(filename: string): Uint8Array {\n    if (!filename) {\n      throw new Error('Invalid filename.');\n    }\n    if (!this.exists(filename)) {\n      throw new Error(`File \"${filename}\" does not exist.`);\n    }\n    return this._files[filename].getBytes();\n  }\n\n  /**\n   * Delete a file from the file system.\n   *\n   * @throws {Error} When invalid file name is provided.\n   * @throws {Error} When the file doesn't exist.\n   *\n   * @param filename - Name of the file to delete.\n   */\n  remove(filename: string): void {\n    if (!filename) {\n      throw new Error('Invalid filename.');\n    }\n    if (!this.exists(filename)) {\n      throw new Error(`File \"${filename}\" does not exist.`);\n    }\n    delete this._files[filename];\n  }\n\n  /**\n   * Check if a file is already present in the file system.\n   *\n   * @param filename - Name for the file to check.\n   * @returns True if it exists, false otherwise.\n   */\n  exists(filename: string): boolean {\n    return this._files.hasOwnProperty(filename);\n  }\n\n  /**\n   * Returns the size of a file in bytes.\n   *\n   * @throws {Error} When invalid file name is provided.\n   * @throws {Error} When the file doesn't exist.\n   *\n   * @param filename - Name for the file to check.\n   * @returns Size file size in bytes.\n   */\n  size(filename: string): number {\n    if (!filename) {\n      throw new Error(`Invalid filename: ${filename}`);\n    }\n    if (!this.exists(filename)) {\n      throw new Error(`File \"${filename}\" does not exist.`);\n    }\n    return calculateFileSize(\n      this._files[filename].filename,\n      this._files[filename].getBytes()\n    );\n  }\n\n  /**\n   * @returns A list all the files in the file system.\n   */\n  ls(): string[] {\n    const files: string[] = [];\n    Object.values(this._files).forEach((value) => files.push(value.filename));\n    return files;\n  }\n\n  /**\n   * Sets a storage size limit. Must be smaller than available space in\n   * MicroPython.\n   *\n   * @param {number} size - Size in bytes for the filesystem.\n   */\n  setStorageSize(size: number): void {\n    let minFsSize = Infinity;\n    this._uPyFsBuilderCache.forEach((builderCache) => {\n      minFsSize = Math.min(minFsSize, builderCache.fsSize);\n    });\n\n    if (size > minFsSize) {\n      throw new Error(\n        'Storage size limit provided is larger than size available in the MicroPython hex.'\n      );\n    }\n    this._storageSize = size;\n  }\n\n  /**\n   * The available filesystem total size either calculated by the MicroPython\n   * hex or the max storage size limit has been set.\n   *\n   * @returns Size of the filesystem in bytes.\n   */\n  getStorageSize(): number {\n    return this._storageSize;\n  }\n\n  /**\n   * @returns The total number of bytes currently used by files in the file system.\n   */\n  getStorageUsed(): number {\n    return Object.values(this._files).reduce(\n      (accumulator, current) => accumulator + this.size(current.filename),\n      0\n    );\n  }\n\n  /**\n   * @returns The remaining storage of the file system in bytes.\n   */\n  getStorageRemaining(): number {\n    return this.getStorageSize() - this.getStorageUsed();\n  }\n\n  /**\n   * Read the files included in a MicroPython hex string and add them to this\n   * instance.\n   *\n   * @throws {Error} When there are no files to import in the hex.\n   * @throws {Error} When there is a problem reading the files from the hex.\n   * @throws {Error} When a filename already exists in this instance (all other\n   *     files are still imported).\n   *\n   * @param intelHex - MicroPython hex string with files.\n   * @param overwrite - Flag to overwrite existing files in this instance.\n   * @param formatFirst - Erase all the previous files before importing. It only\n   *     erases the files after there are no error during hex file parsing.\n   * @returns A filename list of added files.\n   */\n  importFilesFromIntelHex(\n    intelHex: string,\n    { overwrite = false, formatFirst = false }: ImportOptions = {}\n  ): string[] {\n    const files = getIntelHexFiles(intelHex);\n    if (!Object.keys(files).length) {\n      throw new Error('Intel Hex does not have any files to import');\n    }\n\n    if (formatFirst) {\n      this._files = {};\n    }\n    const existingFiles: string[] = [];\n    Object.keys(files).forEach((filename) => {\n      if (!overwrite && this.exists(filename)) {\n        existingFiles.push(filename);\n      } else {\n        this.write(filename, files[filename]);\n      }\n    });\n    // Only throw the error at the end so that all other files are imported\n    if (existingFiles.length) {\n      throw new Error(`Files \"${existingFiles}\" from hex already exists.`);\n    }\n    return Object.keys(files);\n  }\n\n  /**\n   * Read the files included in a MicroPython Universal Hex string and add them\n   * to this instance.\n   *\n   * @throws {Error} When there are no files to import from one of the hex.\n   * @throws {Error} When the files in the individual hex are different.\n   * @throws {Error} When there is a problem reading files from one of the hex.\n   * @throws {Error} When a filename already exists in this instance (all other\n   *     files are still imported).\n   *\n   * @param universalHex - MicroPython Universal Hex string with files.\n   * @param overwrite - Flag to overwrite existing files in this instance.\n   * @param formatFirst - Erase all the previous files before importing. It only\n   *     erases the files after there are no error during hex file parsing.\n   * @returns A filename list of added files.\n   */\n  importFilesFromUniversalHex(\n    universalHex: string,\n    { overwrite = false, formatFirst = false }: ImportOptions = {}\n  ): string[] {\n    if (!microbitUh.isUniversalHex(universalHex)) {\n      throw new Error('Universal Hex provided is invalid.');\n    }\n\n    interface FileObj {\n      [filename: string]: Uint8Array;\n    }\n\n    const hexWithIds = microbitUh.separateUniversalHex(universalHex);\n    const allFileGroups: FileObj[] = [];\n    hexWithIds.forEach((hexWithId: IntelHexWithId) => {\n      const fileGroup = getIntelHexFiles(hexWithId.hex);\n      if (!Object.keys(fileGroup).length) {\n        throw new Error(\n          `Hex with ID ${hexWithId.boardId} from Universal Hex does not have any files to import`\n        );\n      }\n      allFileGroups.push(fileGroup);\n    });\n\n    // Ensure all hexes have the same files\n    allFileGroups.forEach((fileGroup: FileObj) => {\n      // Create new array without this current group\n      const compareFileGroups = allFileGroups.filter((v) => v !== fileGroup);\n      // Check that all files in this group are in all the others\n      for (const [fileName, fileContent] of Object.entries(fileGroup)) {\n        compareFileGroups.forEach((compareGroup: FileObj) => {\n          if (\n            !compareGroup.hasOwnProperty(fileName) ||\n            !areUint8ArraysEqual(compareGroup[fileName], fileContent)\n          ) {\n            throw new Error(\n              'Mismatch in the different Hexes inside the Universal Hex'\n            );\n          }\n        });\n      }\n    });\n\n    // If we reached this point all file groups are the same and we can use any\n    const files = allFileGroups[0];\n    if (formatFirst) {\n      this._files = {};\n    }\n    const existingFiles: string[] = [];\n    Object.keys(files).forEach((filename) => {\n      if (!overwrite && this.exists(filename)) {\n        existingFiles.push(filename);\n      } else {\n        this.write(filename, files[filename]);\n      }\n    });\n    // Only throw the error at the end so that all other files are imported\n    if (existingFiles.length) {\n      throw new Error(`Files \"${existingFiles}\" from hex already exists.`);\n    }\n    return Object.keys(files);\n  }\n\n  /**\n   * Read the files included in a MicroPython Universal or Intel Hex string and\n   * add them to this instance.\n   *\n   * @throws {Error} When there are no files to import from the hex.\n   * @throws {Error} When in the Universal Hex the files of the individual hexes\n   *    are different.\n   * @throws {Error} When there is a problem reading files from one of the hex.\n   * @throws {Error} When a filename already exists in this instance (all other\n   *     files are still imported).\n   *\n   * @param hexStr - MicroPython Intel or Universal Hex string with files.\n   * @param overwrite - Flag to overwrite existing files in this instance.\n   * @param formatFirst - Erase all the previous files before importing. It only\n   *     erases the files after there are no error during hex file parsing.\n   * @returns A filename list of added files.\n   */\n  importFilesFromHex(hexStr: string, options: ImportOptions = {}) {\n    return microbitUh.isUniversalHex(hexStr)\n      ? this.importFilesFromUniversalHex(hexStr, options)\n      : this.importFilesFromIntelHex(hexStr, options);\n  }\n\n  /**\n   * Generate a new copy of the MicroPython Intel Hex with the files in the\n   * filesystem included.\n   *\n   * @throws {Error} When a file doesn't have any data.\n   * @throws {Error} When there are issues calculating file system boundaries.\n   * @throws {Error} When there is no space left for a file.\n   * @throws {Error} When the board ID is not found.\n   * @throws {Error} When there are multiple MicroPython hexes and board ID is\n   *    not provided.\n   *\n   * @param boardId - When multiple MicroPython hex files are provided select\n   *    one via this argument.\n   *\n   * @returns A new string with MicroPython and the filesystem included.\n   */\n  getIntelHex(boardId?: number | microbitBoardId): string {\n    if (this.getStorageRemaining() < 0) {\n      throw new Error('There is no storage space left.');\n    }\n    const files: { [filename: string]: Uint8Array } = {};\n    Object.values(this._files).forEach((file) => {\n      files[file.filename] = file.getBytes();\n    });\n\n    if (boardId === undefined) {\n      if (this._uPyFsBuilderCache.length === 1) {\n        return generateHexWithFiles(this._uPyFsBuilderCache[0], files);\n      } else {\n        throw new Error(\n          'The Board ID must be specified if there are multiple MicroPythons.'\n        );\n      }\n    }\n\n    for (const builderCache of this._uPyFsBuilderCache) {\n      if (builderCache.boardId === boardId) {\n        return generateHexWithFiles(builderCache, files);\n      }\n    }\n    // If we reach this point we could not find the board ID\n    throw new Error('Board ID requested not found.');\n  }\n\n  /**\n   * Generate a byte array of the MicroPython and filesystem data.\n   *\n   * @throws {Error} When a file doesn't have any data.\n   * @throws {Error} When there are issues calculating file system boundaries.\n   * @throws {Error} When there is no space left for a file.\n   * @throws {Error} When the board ID is not found.\n   * @throws {Error} When there are multiple MicroPython hexes and board ID is\n   *    not provided.\n   *\n   * @param boardId - When multiple MicroPython hex files are provided select\n   *    one via this argument.\n   *\n   * @returns A Uint8Array with MicroPython and the filesystem included.\n   */\n  getIntelHexBytes(boardId?: number | microbitBoardId): Uint8Array {\n    if (this.getStorageRemaining() < 0) {\n      throw new Error('There is no storage space left.');\n    }\n    const files: { [filename: string]: Uint8Array } = {};\n    Object.values(this._files).forEach((file) => {\n      files[file.filename] = file.getBytes();\n    });\n\n    if (boardId === undefined) {\n      if (this._uPyFsBuilderCache.length === 1) {\n        return addIntelHexFiles(\n          this._uPyFsBuilderCache[0].originalMemMap,\n          files,\n          true\n        ) as Uint8Array;\n      } else {\n        throw new Error(\n          'The Board ID must be specified if there are multiple MicroPythons.'\n        );\n      }\n    }\n    for (const builderCache of this._uPyFsBuilderCache) {\n      if (builderCache.boardId === boardId) {\n        return addIntelHexFiles(\n          builderCache.originalMemMap,\n          files,\n          true\n        ) as Uint8Array;\n      }\n    }\n    // If we reach this point we could not find the board ID\n    throw new Error('Board ID requested not found.');\n  }\n\n  /**\n   * Generate a new copy of a MicroPython Universal Hex with the files in the\n   * filesystem included.\n   *\n   * @throws {Error} When a file doesn't have any data.\n   * @throws {Error} When there are issues calculating file system boundaries.\n   * @throws {Error} When there is no space left for a file.\n   * @throws {Error} When this method is called without having multiple\n   *    MicroPython hexes.\n   *\n   * @returns A new Universal Hex string with MicroPython and filesystem.\n   */\n  getUniversalHex(): string {\n    if (this._uPyFsBuilderCache.length === 1) {\n      throw new Error(\n        'MicropythonFsHex constructor must have more than one MicroPython ' +\n          'Intel Hex to generate a Universal Hex.'\n      );\n    }\n    const iHexWithIds: IntelHexWithId[] = [];\n    this._uPyFsBuilderCache.forEach((builderCache) => {\n      iHexWithIds.push({\n        hex: this.getIntelHex(builderCache.boardId),\n        boardId: builderCache.boardId,\n      });\n    });\n    return microbitUh.createUniversalHex(iHexWithIds);\n  }\n}\n"],"names":["exec","e","require$$0","Object","defineProperty","get","a","global","module","window","Math","self","Function","__g","core","version","__e","it","isObject","TypeError","document","is","createElement","require$$1","require$$2","S","fn","val","toString","call","valueOf","dP","O","P","Attributes","anObject","toPrimitive","IE8_DOM_DEFINE","value","bitmap","enumerable","configurable","writable","object","key","f","createDesc","hasOwnProperty","id","px","random","concat","undefined","SHARED","store","push","mode","copyright","SRC","TO_STRING","TPL","$toString","split","inspectSource","safe","isFunction","has","hide","join","String","prototype","this","that","length","aFunction","b","c","apply","arguments","$export","type","name","source","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","target","exports","expProto","ctx","redefine","U","W","R","Typed","TYPED","uid","VIEW","ABV","ArrayBuffer","DataView","CONSTR","i","TypedArrayConstructors","src","Constructor","forbiddenField","ceil","floor","isNaN","min","toInteger","number","toLength","RangeError","slice","propertyIsEnumerable","cof","IObject","defined","max","index","IS_INCLUDES","$this","el","fromIndex","toIObject","toAbsoluteIndex","shared","arrayIndexOf","IE_PROTO","names","result","hiddenKeys","getOwnPropertyNames","$keys","toObject","aLen","end","endPos","Symbol","USE_SYMBOL","def","TAG","tag","stat","gOPN","ARRAY_BUFFER","DATA_VIEW","WRONG_INDEX","$ArrayBuffer","$DataView","Infinity","BaseBuffer","abs","pow","log","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","DESCRIPTORS","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","m","buffer","Array","eLen","eMax","eBias","rt","s","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","addGetter","C","internal","view","isLittleEndian","intIndex","toIndex","_b","start","pack","reverse","set","conversion","$typed","fails","ArrayBufferProto","anInstance","keys","j","constructor","$setInt8","setInt8","getInt8","redefineAll","byteOffset","setUint8","byteLength","arrayFill","bufferLength","offset","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","ARG","T","tryGet","callee","ITERATOR","ArrayProto","Iterators","enumBugKeys","defineProperties","Properties","getKeys","documentElement","Empty","createDict","iframeDocument","iframe","style","display","appendChild","contentWindow","open","write","lt","close","create","dPs","ObjectProto","getPrototypeOf","getIteratorMethod","classof","isArray","arg","SPECIES","original","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","asc","callbackfn","res","D","UNSCOPABLES","done","IteratorPrototype","NAME","next","descriptor","setToStringTag","BUGGY","KEYS","VALUES","returnThis","Base","DEFAULT","IS_SET","FORCED","$iterCreate","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","values","iterated","_t","_i","_k","step","Arguments","SAFE_CLOSING","riter","from","skipClosing","arr","iter","KEY","copyWithin","len","to","count","inc","gOPD","getOwnPropertyDescriptor","pIE","require$$3","require$$4","require$$5","$buffer","require$$6","require$$7","require$$8","propertyDesc","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","isArrayIter","require$$21","require$$22","require$$23","require$$24","getIterFn","require$$25","require$$26","wks","require$$27","createArrayMethod","require$$28","createArrayIncludes","require$$29","speciesConstructor","require$$30","ArrayIterators","require$$31","require$$32","$iterDetect","require$$33","setSpecies","require$$34","require$$35","arrayCopyWithin","require$$36","$DP","require$$37","$GOPD","require$$38","Uint8Array","SHARED_BUFFER","BYTES_PER_ELEMENT","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayValues","arrayKeys","arrayEntries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","sort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","toOffset","BYTES","validate","speciesFromList","list","fromList","_d","$from","iterator","mapfn","mapping","iterFn","$of","TO_LOCALE_BUG","$toLocaleString","every","fill","filter","find","predicate","findIndex","forEach","indexOf","searchElement","includes","separator","map","middle","some","comparefn","subarray","begin","$begin","$slice","$set","arrayLike","$iterators","isTAIndex","$getDesc","$setDesc","desc","$TypedArrayPrototype$","wrapper","CLAMPED","GETTER","SETTER","TypedArray","TAC","TypedArrayPrototype","addElement","data","v","o","getter","round","setter","$offset","$length","klass","$len","l","$nativeIterator","CORRECT_ITER_NAME","$iterator","of","init","re1","re2","pos","charCodeAt","charAt","at","unicode","builtinExec","RegExp","ignoreCase","multiline","sticky","nativeExec","nativeReplace","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","NPCG_INCLUDED","str","lastIndex","reCopy","match","re","regexpFlags","forced","regexpExec","REPLACE_SUPPORTS_NAMED_GROUPS","groups","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","fns","nativeMethod","regexp","arg2","forceStringMethod","strfn","rxfn","string","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","REPLACE","$replace","maybeCallNative","searchValue","replaceValue","rx","functionalReplace","fullUnicode","results","regExpExec","advanceStringIndex","accumulatedResult","nextSourcePosition","matched","position","captures","namedCaptures","replacerArgs","replacement","getSubstitution","tailPos","symbols","ch","capture","n","ret","BREAK","RETURN","iterable","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","NEED","fastKey","getWeak","onFreeze","SIZE","getEntry","entry","_f","k","getConstructor","ADDER","_l","forOf","clear","r","p","delete","prev","setStrong","$iterDefine","check","setPrototypeOf","test","buggy","__proto__","common","IS_WEAK","fixMethod","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","inheritIfRequired","add","strong","MATCH","$match","A","matchStr","$defineProperty","createProperty","method","$sort","$Symbol","wksExt","getOwnPropertySymbols","windowNames","getWindowNames","gOPNExt","$JSON","JSON","_stringify","stringify","HIDDEN","TO_PRIMITIVE","isEnum","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","$GOPS","QObject","findChild","setSymbolDesc","$fails","_create","protoDesc","wrap","sym","isSymbol","$defineProperties","getSymbols","gOPS","enumKeys","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","es6Symbols","wellKnownSymbols","wksDefine","for","keyFor","useSetter","useSimple","FAILS_ON_PRIMITIVES","replacer","$replacer","args","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","$at","point","MAP","space","spaces","ltrim","rtrim","exporter","ALIAS","FORCE","trim","$trim","NUMBER","$Number","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","first","code","digits","parseInt","isInteger","isFinite","flags","define","$flags","maxLength","fillString","left","stringLength","fillStr","intMaxLength","fillLen","stringFiller","repeat","navigator","userAgent","WEBKIT_BUG","padStart","$pad","hexLineRegexp","checksum","sum","checksumTwo","array1","array2","hexpad","toUpperCase","Number","MemoryMap","blocks","_blocks","Map","tuple","Error","_typeof","addr","callback","maxBlockSize","sortedKeys","blockSizes","lastBlockAddr","lastBlockEndAddr","blockAddr","blockLength","mergingBlock","mergedBlocks","mergingBlockAddr","pageSize","pad","page","outPages","block","blockEnd","pageAddr","subBlock","littleEndian","lineSize","lowAddress","highAddress","records","offsetRecord","recordHeader","blockSize","blockOffset","recordSize","cloned","address","sliced","sliceStart","sliceEnd","sliceLength","relativeSliceStart","padByte","memMap","size","hexText","matchResult","lastCharacterParsed","recordCount","ulba","substring","recordStr","recordChecksum","recordBytes","h","recordLength","cs","recordType","memoryMaps","cuts","Set","orderedCuts","overlaps","cut","nextCut","tuples","setId","acc","subBlockStart","subBlockEnd","minPadLength","consecutivePads","lastNonPad","firstNonPad","skippingBytes","byte","TextEncoderLite","TextDecoderLite","utf8ToBytes","units","codePoint","leadSurrogate","decodeUtf8Char","decodeURIComponent","err","fromCharCode","encode","decode","buf","tmp","utf8Slice","concatUint8Array","combined","isEntries","$values","isRegExp","searchString","INCLUDES","context","ENDS_WITH","$endsWith","endsWith","endPosition","search","$includes","$min","$push","MAX_UINT32","SUPPORTS_Y","hexStr","byteArray","SPLIT","$split","internalSplit","limit","lastLength","output","lastLastIndex","splitLimit","separatorCopy","splitter","unicodeMatching","lim","callRegExpExec","q","z","isRecordTypeValid","calcChecksumByte","dataBytes","accumulator","byteCount","START_CODE_STR_LEN","recordTypeStr","iHexRecord","recordTypeCharStart","padBytesLen","oRecord","replaceDataRecord","endRecordBaseLen","padRecordBaseLen","hexRecords","recordPaddingCapacity","currentExtAddr","ih","ihex.RecordType","ExtendedLinearAddress","ihex.paddedDataRecord","BLOCK_SIZE","blockLines","blockLen","record","boardId","addRecord","recordNoDataLenChars","recordDataMaxBytes","charsNeeded","ihex.blockEndRecord","ihex.getRecordType","ihex.extLinAddressRecord","RegionRowOffset","hashData","Uint32Array","magic2ToFind","mapEntries","RegionHeaderOffset","blockByteArray","iHexMap","endAddress","regionCount","pageSizeLog2","tableLength","startAddress","magicHeader","flashSize","fsEnd","getMagicValue","uicrMap","intelHexMap","DEVICE_INFO_1","DEVICE_INFO","readMagicHeader","DEVICE_INFO_3","device","hexMapUtil.getUint16","MicropythonUicrAddress","DEVICE_INFO_2","errorMsg","flashRegions.getHexMapFlashRegionsData","filename","fileHeader","_dataBytes","chunk","headerBytes","intelHex","asHexString","memMapWithFiles","minFsSize","hexWithIdArray","originalMemMap","deviceMem","_files","fsSize","formatFirst","existingFiles","files","ihex.iHexToRecordStrs","allFileGroups","compareFileGroups","compareGroup","_a","file","generateHexWithFiles","iHexToCustomFormat","eofNlRecord","customHexes","hexes","blockBytes","strToBytes","cleanseOldHexFormat","getHexMapDeviceMemInfo"],"mappings":"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"}